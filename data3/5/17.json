{"nodes": [{"string": "b;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " i = n ;", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 6, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " b = i ;", "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " n > 0 )", "links": [], "variables": ["n"], "ids": ["lp", "lp"], "nodeId": 8, "featuresSelf": ["cn", "loop"], "operators": [">"], "constants": ["0"], "features": []}, {"string": " b % 10 ;", "links": [], "variables": ["b"], "ids": ["lp", "lp", "lp"], "nodeId": 9, "featuresSelf": [], "operators": ["%"], "constants": ["10"], "features": []}, {"string": " k * 10 + r ;", "links": [11, 12], "variables": [], "ids": ["lp", "lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["r"], "ids": ["lp", "lp", "lp"], "nodeId": 11, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " k * 10 +", "links": [], "variables": ["k"], "ids": ["lp", "lp", "lp"], "nodeId": 12, "featuresSelf": [], "operators": ["*"], "constants": ["10"], "features": []}, {"string": " b / 10 ;", "links": [], "variables": ["b"], "ids": ["lp", "lp", "lp"], "nodeId": 13, "featuresSelf": [], "operators": ["/"], "constants": ["10"], "features": []}, {"string": " k == i )", "links": [], "variables": ["i", "k"], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["k"], "ids": ["lp", "lp", "if"], "nodeId": 15, "featuresSelf": ["out"], "operators": [], "constants": ["%d,"], "features": []}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 16, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["out"], "operators": [], "constants": ["\\n)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 18, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d,", ":1;--;", "lp:1;&;%d,", "lp:", "lp:", "lplp:1;++;", "lplp:", "lplp:1;>;0", "lplplp:1;%;10", "lplplp:0;+;", "lplplp:", "lplplp:1;*;10", "lplplp:1;/;10", "lplp:2;==;", "lplpif:%d,", "lplpif:", "lp:\\n)", ":0"], "expr": ["", "1;&;%d,", "1;--;", "1;&;%d,", "", "", "1;++;", "", "1;>;0", "1;%;10", "0;+;", "", "1;*;10", "1;/;10", "2;==;", "%d,", "", "\\n)", "0"], "basic": ["&", "%d,", "--", "loop", "&", "%d,", "loop", "++", ">", "0", "loop", "%", "10", "+", "*", "10", "/", "10", "==", "%d,", "\\n)", "0"], "exprDepend": ["1;%;10#1;/;10"], "controlContextBC": [":&", ":%d,", ":--", "lp:&", "lp:%d,", "lplp:++", "lplp:>", "lplp:0", "lplplp:%", "lplplp:10", "lplplp:+", "lplplp:*", "lplplp:10", "lplplp:/", "lplplp:10", "lplp:==", "lplpif:%d,", "lp:\\n)", ":0"]}]}