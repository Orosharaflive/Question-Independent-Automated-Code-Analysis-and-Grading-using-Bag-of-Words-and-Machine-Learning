{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": ["out"], "operators": [], "constants": ["Enterthenumberpftestcases\\n)"], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " i < t ;", "links": [], "variables": ["i", "t"], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 4, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "k;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["out"], "operators": [], "constants": ["Enterabasenumber\\n)"], "features": []}, {"string": "scanf", "links": [], "variables": ["k"], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " j > k ;", "links": [], "variables": ["j", "k"], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": ["+", ">"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 10, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "temp;", "links": [], "variables": ["temp", "j"], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " temp != 0 )", "links": [], "variables": ["temp"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": ["cn", "loop"], "operators": ["!="], "constants": ["0"], "features": []}, {"string": " temp % 10 ;", "links": [], "variables": ["temp"], "ids": ["lp", "lp", "lp"], "nodeId": 14, "featuresSelf": [], "operators": ["%"], "constants": ["10"], "features": []}, {"string": " rev * 10 + d ;", "links": [16, 17], "variables": [], "ids": ["lp", "lp", "lp"], "nodeId": 15, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["d"], "ids": ["lp", "lp", "lp"], "nodeId": 16, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " rev * 10 +", "links": [], "variables": ["rev"], "ids": ["lp", "lp", "lp"], "nodeId": 17, "featuresSelf": [], "operators": ["*"], "constants": ["10"], "features": []}, {"string": " temp / 10 ;", "links": [], "variables": ["temp"], "ids": ["lp", "lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["/"], "constants": ["10"], "features": []}, {"string": " rev == j )", "links": [], "variables": ["j", "rev"], "ids": ["lp", "lp"], "nodeId": 19, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["j"], "ids": ["lp", "lp", "if"], "nodeId": 20, "featuresSelf": ["out"], "operators": [], "constants": ["%d\\n,"], "features": []}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 21, "featuresSelf": ["break", "continue"], "operators": [], "constants": [], "features": []}], "features": [{"controlContextEC": [":", ":Enterthenumberpftestcases\\n)", ":1;&;%d,", ":2;<;0", ":", "lp:1;++;", "lp:", "lp:Enterabasenumber\\n)", "lp:1;&;%d,", "lp:2;+;2;>;1", "lp:", "lplp:1;++;", "lplp:0", "lplp:1;!=;0", "lplplp:1;%;10", "lplplp:0;+;", "lplplp:", "lplplp:1;*;10", "lplplp:1;/;10", "lplp:2;==;", "lplpif:%d\\n,", "lplpif:"], "expr": ["", "Enterthenumberpftestcases\\n)", "1;&;%d,", "2;<;0", "", "1;++;", "", "Enterabasenumber\\n)", "1;&;%d,", "2;+;2;>;1", "", "1;++;", "0", "1;!=;0", "1;%;10", "0;+;", "", "1;*;10", "1;/;10", "2;==;", "%d\\n,", ""], "basic": ["Enterthenumberpftestcases\\n)", "&", "%d,", "<", "0", "loop", "++", "Enterabasenumber\\n)", "&", "%d,", "+", ">", "1", "loop", "++", "0", "!=", "0", "loop", "%", "10", "+", "*", "10", "/", "10", "==", "%d\\n,"], "exprDepend": ["0#1;/;10", "1;!=;0#1;/;10", "1;%;10#1;/;10"], "controlContextBC": [":Enterthenumberpftestcases\\n)", ":&", ":%d,", ":<", ":0", "lp:++", "lp:Enterabasenumber\\n)", "lp:&", "lp:%d,", "lp:+", "lp:>", "lp:1", "lplp:++", "lplp:0", "lplp:!=", "lplp:0", "lplplp:%", "lplplp:10", "lplplp:+", "lplplp:*", "lplplp:10", "lplplp:/", "lplplp:10", "lplp:==", "lplpif:%d\\n,"]}]}