{"nodes": [{"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 0, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 1, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 2, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " - 1 * a ;", "links": [4, 5], "variables": ["a"], "ids": [], "nodeId": 3, "featuresSelf": ["icn", "return"], "operators": ["<", "*"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": ["a"], "ids": ["if"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["if"], "nodeId": 5, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": " return a ;", "links": [], "variables": ["a"], "ids": [], "nodeId": 6, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": "t;", "links": [], "variables": ["["], "ids": [], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": ["15"], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 8, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 9, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "k"], "ids": ["lp"], "nodeId": 10, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": " i < n ;", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 12, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i", "a"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": ["in"], "operators": ["++", "&"], "constants": ["%d,"], "features": []}, {"string": " n == 2 )", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 14, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["2"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 15, "featuresSelf": ["out"], "operators": [], "constants": ["YES\\n)"], "features": []}, {"string": " continue ;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 16, "featuresSelf": ["continue"], "operators": [], "constants": [], "features": []}, {"string": " i = 1 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 17, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " flag = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 18, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " flag <= 1 &&", "links": [], "variables": ["n", "i", "flag"], "ids": ["lp"], "nodeId": 19, "featuresSelf": ["cn", "loop"], "operators": ["&&", "<", "<="], "constants": ["1"], "features": []}, {"string": " absl ( a [ i ] - a [ 0 ] ) % ( k + 1 ) == 0 )", "links": [21, 22], "variables": [], "ids": ["lp", "lp"], "nodeId": 20, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 21, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " absl ( a [ i ] - a [ 0 ] ) % ( k + 1 ) ==", "links": [23, 24], "variables": [], "ids": ["lp", "lp"], "nodeId": 22, "featuresSelf": [], "operators": ["%"], "constants": [], "features": []}, {"string": " k + 1 )", "links": [], "variables": ["k"], "ids": ["lp", "lp"], "nodeId": 23, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " a [ i ] - a [ 0 ] )", "links": [], "variables": ["a", "i", "absl", "flag"], "ids": ["lp", "lp"], "nodeId": 24, "featuresSelf": [], "operators": ["-", "++"], "constants": ["0"], "features": []}, {"string": " i ++ ;", "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 25, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " flag <= 1 )", "links": [], "variables": ["flag"], "ids": ["lp"], "nodeId": 26, "featuresSelf": ["icn"], "operators": ["<="], "constants": ["1"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 27, "featuresSelf": ["out"], "operators": [], "constants": ["YES\\n)"], "features": []}, {"string": " continue ;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 28, "featuresSelf": ["continue"], "operators": [], "constants": [], "features": []}, {"string": " i = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 29, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " flag = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 30, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " flag <= 1 &&", "links": [], "variables": ["n", "i", "flag"], "ids": ["lp"], "nodeId": 31, "featuresSelf": ["cn", "loop"], "operators": ["&&", "<", "<="], "constants": ["1"], "features": []}, {"string": " absl ( a [ i ] - a [ 1 ] ) % ( k + 1 ) == 0 )", "links": [33, 34], "variables": [], "ids": ["lp", "lp"], "nodeId": 32, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 33, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " absl ( a [ i ] - a [ 1 ] ) % ( k + 1 ) ==", "links": [35, 36], "variables": [], "ids": ["lp", "lp"], "nodeId": 34, "featuresSelf": [], "operators": ["%"], "constants": [], "features": []}, {"string": " k + 1 )", "links": [], "variables": ["k"], "ids": ["lp", "lp"], "nodeId": 35, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " a [ i ] - a [ 1 ] )", "links": [], "variables": ["a", "i", "absl", "flag"], "ids": ["lp", "lp"], "nodeId": 36, "featuresSelf": [], "operators": ["-", "++"], "constants": ["1"], "features": []}, {"string": " i ++ ;", "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 37, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " flag <= 1 )", "links": [], "variables": ["flag"], "ids": ["lp"], "nodeId": 38, "featuresSelf": ["icn"], "operators": ["<="], "constants": ["1"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 39, "featuresSelf": ["out"], "operators": [], "constants": ["YES\\n)"], "features": []}, {"string": " continue ;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 40, "featuresSelf": ["continue"], "operators": [], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp"], "nodeId": 41, "featuresSelf": ["out"], "operators": [], "constants": ["NO\\n)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 42, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":", ":", ":", ":", ":", ":", ":", ":", ":1;<;1;*;0", "if:", "if:0;-;1", ":", ":", ":", ":", ":1;<;1;*;0", "if:", "if:0;-;1", ":", ":15", ":1;&;%d,", ":1;--;", "lp:2;&;2;&;%d%d,", "lp:2;<;0", "lp:", "lplp:2;++;2;&;%d,", "lp:1;==;2", "lpif:YES\\n)", "lpif:", "lp:1", "lp:0", "lp:3;&&;3;<;3;<=;1", "lplp:0;==;", "lplp:0", "lplp:0;%;", "lplp:1;+;1", "lplp:4;-;4;++;0", "lplp:1;++;", "lp:1;<=;1", "lpif:YES\\n)", "lpif:", "lp:0", "lp:0", "lp:3;&&;3;<;3;<=;1", "lplp:0;==;", "lplp:0", "lplp:0;%;", "lplp:1;+;1", "lplp:4;-;4;++;1", "lplp:1;++;", "lp:1;<=;1", "lpif:YES\\n)", "lpif:", "lp:NO\\n)", ":0"], "expr": ["", "", "", "", "", "", "", "", "", "1;<;1;*;0", "", "0;-;1", "", "", "", "", "1;<;1;*;0", "", "0;-;1", "", "15", "1;&;%d,", "1;--;", "2;&;2;&;%d%d,", "2;<;0", "", "2;++;2;&;%d,", "1;==;2", "YES\\n)", "", "1", "0", "3;&&;3;<;3;<=;1", "0;==;", "0", "0;%;", "1;+;1", "4;-;4;++;0", "1;++;", "1;<=;1", "YES\\n)", "", "0", "0", "3;&&;3;<;3;<=;1", "0;==;", "0", "0;%;", "1;+;1", "4;-;4;++;1", "1;++;", "1;<=;1", "YES\\n)", "", "NO\\n)", "0"], "basic": ["<", "*", "0", "-", "1", "<", "*", "0", "-", "1", "15", "&", "%d,", "--", "loop", "&", "&", "%d%d,", "<", "0", "loop", "++", "&", "%d,", "==", "2", "YES\\n)", "1", "0", "&&", "<", "<=", "1", "loop", "==", "0", "%", "+", "1", "-", "++", "0", "++", "<=", "1", "YES\\n)", "0", "0", "&&", "<", "<=", "1", "loop", "==", "0", "%", "+", "1", "-", "++", "1", "++", "<=", "1", "YES\\n)", "NO\\n)", "0"], "exprDepend": ["2;<;0#1", "2;++;2;&;%d,#1", "2;<;0#0", "2;++;2;&;%d,#0", "3;&&;3;<;3;<=;1#0", "4;-;4;++;0#0", "1;++;#0", "3;&&;3;<;3;<=;1#0", "4;-;4;++;0#0", "1;<=;1#0"], "controlContextBC": [":<", ":*", ":0", "if:-", "if:1", ":<", ":*", ":0", "if:-", "if:1", ":15", ":&", ":%d,", ":--", "lp:&", "lp:&", "lp:%d%d,", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", "lp:==", "lp:2", "lpif:YES\\n)", "lp:1", "lp:0", "lp:&&", "lp:<", "lp:<=", "lp:1", "lplp:==", "lplp:0", "lplp:%", "lplp:+", "lplp:1", "lplp:-", "lplp:++", "lplp:0", "lplp:++", "lp:<=", "lp:1", "lpif:YES\\n)", "lp:0", "lp:0", "lp:&&", "lp:<", "lp:<=", "lp:1", "lplp:==", "lplp:0", "lplp:%", "lplp:+", "lplp:1", "lplp:-", "lplp:++", "lplp:1", "lplp:++", "lp:<=", "lp:1", "lpif:YES\\n)", "lp:NO\\n)", ":0"]}]}