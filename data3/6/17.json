{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "n;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "k"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": "a;", "links": [], "variables": ["a", "n"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "different;", "links": [], "variables": ["different", "["], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["0", "1001", "0"], "features": []}, {"string": " i < n ;", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "i"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " count [ a [ i ] ] ++ ;", "links": [], "variables": ["count", "a", "i"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "temp;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " while ( c )", "links": [], "variables": ["c"], "ids": ["lp"], "nodeId": 13, "featuresSelf": ["cn", "loop"], "operators": [], "constants": [], "features": []}, {"string": " c = 0 ;", "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "int visit1[100];", "links": [], "variables": ["visit1"], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": [], "operators": [], "constants": ["100", "0"], "features": []}, {"string": " i < n ;", "links": [], "variables": ["n", "i"], "ids": ["lp", "lp"], "nodeId": 16, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 17, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ i ] - ( k + 1 ) ;", "links": [20, 21], "variables": [], "ids": ["lp", "lp", "lp"], "nodeId": 19, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " k + 1 )", "links": [], "variables": ["k"], "ids": ["lp", "lp", "lp"], "nodeId": 20, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["a", "i"], "ids": ["lp", "lp", "lp"], "nodeId": 21, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " temp >= 0 )", "links": [], "variables": ["temp"], "ids": ["lp", "lp", "lp"], "nodeId": 22, "featuresSelf": ["icn"], "operators": [">="], "constants": ["0"], "features": []}, {"string": "Implicit Cast", "links": [], "variables": ["count", "temp"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 23, "featuresSelf": ["icn"], "operators": [], "constants": [], "features": []}, {"string": " a [ i ] -- ;", "links": [], "variables": ["a", "i"], "ids": ["lp", "lp", "lp", "if", "if"], "nodeId": 24, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " c = 1 ;", "links": [], "variables": [], "ids": ["lp", "lp", "lp", "if", "if"], "nodeId": 25, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " count [ temp ] -- ;", "links": [], "variables": ["count", "temp"], "ids": ["lp", "lp", "lp", "if", "if"], "nodeId": 26, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " count [ a [ i ] ] ++ ;", "links": [], "variables": ["count", "a", "i"], "ids": ["lp", "lp", "lp", "if", "if"], "nodeId": 27, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " visit1 [ i ] ++ ;", "links": [], "variables": ["visit1", "i"], "ids": ["lp", "lp", "lp", "if", "if"], "nodeId": 28, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "Implicit Cast", "links": [], "variables": ["c"], "ids": ["lp", "lp"], "nodeId": 29, "featuresSelf": ["icn"], "operators": [], "constants": [], "features": []}, {"string": " i < n ;", "links": [], "variables": ["n", "i"], "ids": ["lp", "lp", "if"], "nodeId": 30, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 31, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp", "if", "lp"], "nodeId": 32, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " visit1 [ i ] == 0 )", "links": [], "variables": ["visit1", "i", "k", "a"], "ids": ["lp", "lp", "if", "lp"], "nodeId": 33, "featuresSelf": ["icn"], "operators": ["==", "+="], "constants": ["0"], "features": []}, {"string": "int visit[1001];", "links": [], "variables": ["visit"], "ids": ["lp"], "nodeId": 34, "featuresSelf": [], "operators": [], "constants": ["1001", "0", "0"], "features": []}, {"string": " i < n ;", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 35, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 36, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 37, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " visit [ a [ i ] ] == 0 )", "links": [], "variables": ["visit", "a", "i"], "ids": ["lp", "lp"], "nodeId": 38, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["0"], "features": []}, {"string": " count1 ++ ;", "links": [], "variables": ["count1"], "ids": ["lp", "lp", "if"], "nodeId": 39, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " visit [ a [ i ] ] ++ ;", "links": [], "variables": ["visit", "a", "i"], "ids": ["lp", "lp", "if"], "nodeId": 40, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " count1 <= 2 )", "links": [], "variables": ["count1"], "ids": ["lp"], "nodeId": 41, "featuresSelf": ["icn", "out", "out"], "operators": ["<="], "constants": ["2", "YES\\n)", "NO\\n)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 42, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d,", ":1;--;", "lp:", "lp:2;&;2;&;%d%d,", "lp:", "lp:010010", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d,", "lplp:3;++;", "lp:1", "lp:", "lplp:0", "lplp:1000", "lplp:2;<;0", "lplp:", "lplplp:1;++;", "lplplp:0;-;", "lplplp:1;+;1", "lplplp:", "lplplp:1;>=;0", "lplplpif:", "lplplpifif:2;--;", "lplplpifif:1", "lplplpifif:2;--;", "lplplpifif:3;++;", "lplplpifif:2;++;", "lplp:", "lplpif:2;<;0", "lplpif:", "lplpiflp:1;++;", "lplpiflp:4;==;4;+=;0", "lp:100100", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:3;==;0", "lplpif:1;++;", "lplpif:3;++;", "lp:1;<=;2YES\\n)NO\\n)", ":0"], "expr": ["", "1;&;%d,", "1;--;", "", "2;&;2;&;%d%d,", "", "010010", "2;<;0", "", "1;++;", "2;&;%d,", "3;++;", "1", "", "0", "1000", "2;<;0", "", "1;++;", "0;-;", "1;+;1", "", "1;>=;0", "", "2;--;", "1", "2;--;", "3;++;", "2;++;", "", "2;<;0", "", "1;++;", "4;==;4;+=;0", "100100", "2;<;0", "", "1;++;", "3;==;0", "1;++;", "3;++;", "1;<=;2YES\\n)NO\\n)", "0"], "basic": ["&", "%d,", "--", "loop", "&", "&", "%d%d,", "0", "1001", "0", "<", "0", "loop", "++", "&", "%d,", "++", "1", "loop", "0", "100", "0", "<", "0", "loop", "++", "-", "+", "1", ">=", "0", "--", "1", "--", "++", "++", "<", "0", "loop", "++", "==", "+=", "0", "1001", "0", "0", "<", "0", "loop", "++", "==", "0", "++", "++", "<=", "2", "YES\\n)", "NO\\n)", "0"], "exprDepend": ["#0", "2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d,#2;<;0", "3;++;#2;<;0", "#1", "2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d,#2;<;0", "3;++;#2;<;0", "2;<;0#2;<;0", "1;++;#2;<;0", "#2;<;0", "2;--;#2;<;0", "3;++;#2;<;0", "2;++;#2;<;0", "2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d,#2;<;0", "3;++;#2;<;0", "2;<;0#2;<;0", "1;++;#2;<;0", "#2;<;0", "2;--;#2;<;0", "3;++;#2;<;0", "2;++;#2;<;0", "2;<;0#2;<;0", "1;++;#2;<;0", "4;==;4;+=;0#2;<;0"], "controlContextBC": [":&", ":%d,", ":--", "lp:&", "lp:&", "lp:%d%d,", "lp:0", "lp:1001", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", "lplp:++", "lp:1", "lplp:0", "lplp:100", "lplp:0", "lplp:<", "lplp:0", "lplplp:++", "lplplp:-", "lplplp:+", "lplplp:1", "lplplp:>=", "lplplp:0", "lplplpifif:--", "lplplpifif:1", "lplplpifif:--", "lplplpifif:++", "lplplpifif:++", "lplpif:<", "lplpif:0", "lplpiflp:++", "lplpiflp:==", "lplpiflp:+=", "lplpiflp:0", "lp:1001", "lp:0", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:==", "lplp:0", "lplpif:++", "lplpif:++", "lp:<=", "lp:2", "lp:YES\\n)", "lp:NO\\n)", ":0"]}]}