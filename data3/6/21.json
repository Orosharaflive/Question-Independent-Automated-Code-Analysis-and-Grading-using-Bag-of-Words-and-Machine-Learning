{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "int a[1001];", "links": [], "variables": ["a"], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": ["1001"], "features": []}, {"string": "int c[1001];", "links": [], "variables": ["c"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": ["1001"], "features": []}, {"string": "memset", "links": [], "variables": ["a", "memset"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "memset", "links": [], "variables": ["c", "memset"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "K"], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": " x <= n ;", "links": [], "variables": ["x", "n"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["x"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "x"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " x <= n ;", "links": [], "variables": ["x", "n"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 13, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["x"], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " K + 1 )", "links": [], "variables": ["K", "a", "x"], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": [], "operators": ["%=", "+"], "constants": ["1"], "features": []}, {"string": " x <= n ;", "links": [], "variables": ["x", "n"], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["x"], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " c [ a [ x ] ] ++ ;", "links": [], "variables": ["c", "a", "x"], "ids": ["lp", "lp"], "nodeId": 19, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "cek;", "links": [], "variables": ["cek"], "ids": ["lp"], "nodeId": 20, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " x < ( K + 1 ) ;", "links": [23, 24], "variables": ["x"], "ids": ["lp"], "nodeId": 21, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 22, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": " K + 1 )", "links": [], "variables": ["K"], "ids": ["lp"], "nodeId": 23, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["x"], "ids": ["lp"], "nodeId": 24, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " c [ x ] >= n - 1 )", "links": [26, 27], "variables": ["x"], "ids": ["lp", "lp"], "nodeId": 25, "featuresSelf": ["icn"], "operators": ["++", ">="], "constants": [], "features": []}, {"string": " n - 1 )", "links": [], "variables": ["n"], "ids": ["lp", "lp"], "nodeId": 26, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["c", "x"], "ids": ["lp", "lp"], "nodeId": 27, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " cek = 1 ;", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 28, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 29, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " n <= 2 )", "links": [], "variables": ["n", "cek"], "ids": ["lp"], "nodeId": 30, "featuresSelf": ["icn", "out", "out"], "operators": ["||", "<="], "constants": ["2", "YES\\n)", "NO\\n)"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d,", ":1;--;", "lp:1001", "lp:1001", "lp:0", "lp:0", "lp:2;&;2;&;%d%d,", "lp:2;<=;1", "lp:", "lplp:1;++;", "lplp:2;&;%d,", "lp:2;<=;1", "lp:", "lplp:1;++;", "lplp:3;%=;3;+;1", "lp:2;<=;1", "lp:", "lplp:1;++;", "lplp:3;++;", "lp:0", "lp:1;<;0", "lp:", "lp:1;+;1", "lp:", "lplp:1;++;1;>=;", "lplp:1;-;1", "lplp:", "lplpif:1", "lplpif:", "lp:2;||;2;<=;2YES\\n)NO\\n)"], "expr": ["", "1;&;%d,", "1;--;", "1001", "1001", "0", "0", "2;&;2;&;%d%d,", "2;<=;1", "", "1;++;", "2;&;%d,", "2;<=;1", "", "1;++;", "3;%=;3;+;1", "2;<=;1", "", "1;++;", "3;++;", "0", "1;<;0", "", "1;+;1", "", "1;++;1;>=;", "1;-;1", "", "1", "", "2;||;2;<=;2YES\\n)NO\\n)"], "basic": ["&", "%d,", "--", "loop", "1001", "1001", "0", "0", "&", "&", "%d%d,", "<=", "1", "loop", "++", "&", "%d,", "<=", "1", "loop", "++", "%=", "+", "1", "<=", "1", "loop", "++", "++", "0", "<", "0", "loop", "+", "1", "++", ">=", "-", "1", "1", "||", "<=", "2", "YES\\n)", "NO\\n)"], "exprDepend": ["0#1"], "controlContextBC": [":&", ":%d,", ":--", "lp:1001", "lp:1001", "lp:0", "lp:0", "lp:&", "lp:&", "lp:%d%d,", "lp:<=", "lp:1", "lplp:++", "lplp:&", "lplp:%d,", "lp:<=", "lp:1", "lplp:++", "lplp:%=", "lplp:+", "lplp:1", "lp:<=", "lp:1", "lplp:++", "lplp:++", "lp:0", "lp:<", "lp:0", "lp:+", "lp:1", "lplp:++", "lplp:>=", "lplp:-", "lplp:1", "lplpif:1", "lp:||", "lp:<=", "lp:2", "lp:YES\\n)", "lp:NO\\n)"]}]}