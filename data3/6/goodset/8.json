{"nodes": [{"string": "int rem[25];", "links": [], "variables": ["rem"], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": ["25"], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " i <= t ;", "links": [], "variables": ["t", "i"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 3, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "k"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": " flag1 = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " flag2 = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " j < 25 ;", "links": [], "variables": ["j"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": ["<"], "constants": ["0", "25"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " rem [ j ] = 0 ;", "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " j <= n ;", "links": [], "variables": ["n", "j"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 13, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["u"], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " u % ( k + 1 ) ]", "links": [17, 18], "variables": ["rem"], "ids": ["lp", "lp"], "nodeId": 16, "featuresSelf": [], "operators": ["++", "%"], "constants": [], "features": []}, {"string": " k + 1 )", "links": [], "variables": ["k"], "ids": ["lp", "lp"], "nodeId": 17, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["u"], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " flag1 == 1 )", "links": [], "variables": ["flag1"], "ids": ["lp"], "nodeId": 19, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["1"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 20, "featuresSelf": ["out"], "operators": [], "constants": ["NO\\n)"], "features": []}, {"string": " j < 25 ;", "links": [], "variables": ["j"], "ids": ["lp"], "nodeId": 21, "featuresSelf": [], "operators": ["<"], "constants": ["0", "25"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 22, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 23, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " rem [ j ] >= n - 1 )", "links": [25, 26], "variables": [], "ids": ["lp", "lp"], "nodeId": 24, "featuresSelf": ["icn"], "operators": [">="], "constants": [], "features": []}, {"string": " n - 1 )", "links": [], "variables": ["n"], "ids": ["lp", "lp"], "nodeId": 25, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["rem", "j"], "ids": ["lp", "lp"], "nodeId": 26, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " flag2 = 1 ;", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 27, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 28, "featuresSelf": ["out"], "operators": [], "constants": ["YES\\n)"], "features": []}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 29, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " flag2 == 0 )", "links": [], "variables": ["flag2"], "ids": ["lp"], "nodeId": 30, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["0"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 31, "featuresSelf": ["out"], "operators": [], "constants": ["NO\\n)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 32, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":25", ":1;&;%d,", ":2;<=;1", ":", "lp:1;++;", "lp:2;&;2;&;%d%d,", "lp:0", "lp:0", "lp:1;<;025", "lp:", "lplp:1;++;", "lplp:0", "lp:2;<=;1", "lp:", "lplp:1;++;", "lplp:1;&;%d,", "lplp:1;++;1;%;", "lplp:1;+;1", "lplp:", "lp:1;==;1", "lpif:NO\\n)", "lp:1;<;025", "lp:", "lplp:1;++;", "lplp:0;>=;", "lplp:1;-;1", "lplp:", "lplpif:1", "lplpif:YES\\n)", "lplpif:", "lp:1;==;0", "lpif:NO\\n)", ":0"], "expr": ["25", "1;&;%d,", "2;<=;1", "", "1;++;", "2;&;2;&;%d%d,", "0", "0", "1;<;025", "", "1;++;", "0", "2;<=;1", "", "1;++;", "1;&;%d,", "1;++;1;%;", "1;+;1", "", "1;==;1", "NO\\n)", "1;<;025", "", "1;++;", "0;>=;", "1;-;1", "", "1", "YES\\n)", "", "1;==;0", "NO\\n)", "0"], "basic": ["25", "&", "%d,", "<=", "1", "loop", "++", "&", "&", "%d%d,", "0", "0", "<", "0", "25", "loop", "++", "0", "<=", "1", "loop", "++", "&", "%d,", "++", "%", "+", "1", "==", "1", "NO\\n)", "<", "0", "25", "loop", "++", ">=", "-", "1", "1", "YES\\n)", "==", "0", "NO\\n)", "0"], "exprDepend": ["25#0", "1;<;025#0", "1;++;#0", "1;<;025#2;<=;1", "1;++;#2;<=;1", "1;<;025#1;<;025", "1;++;#1;<;025", "2;<=;1#1;<;025", "1;++;#1;<;025"], "controlContextBC": [":25", ":&", ":%d,", ":<=", ":1", "lp:++", "lp:&", "lp:&", "lp:%d%d,", "lp:0", "lp:0", "lp:<", "lp:0", "lp:25", "lplp:++", "lplp:0", "lp:<=", "lp:1", "lplp:++", "lplp:&", "lplp:%d,", "lplp:++", "lplp:%", "lplp:+", "lplp:1", "lp:==", "lp:1", "lpif:NO\\n)", "lp:<", "lp:0", "lp:25", "lplp:++", "lplp:>=", "lplp:-", "lplp:1", "lplpif:1", "lplpif:YES\\n)", "lp:==", "lp:0", "lpif:NO\\n)", ":0"]}]}