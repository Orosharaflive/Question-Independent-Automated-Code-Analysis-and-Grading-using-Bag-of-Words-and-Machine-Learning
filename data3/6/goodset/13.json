{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "k", "a"], "ids": ["lp"], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&", "&", "&"], "constants": ["%d%d%d,"], "features": []}, {"string": " b = - 1 ,", "links": [], "variables": [], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [",", ",", ",", "-"], "constants": ["1", "0", "1", "1"], "features": []}, {"string": " i < n - 1 ;", "links": [7, 8], "variables": [], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": " n - 1 ;", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["temp"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " count ++ ;", "links": [], "variables": ["count"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " ( abs ( temp - a ) ) % ( k + 1 ) != 0 )", "links": [13, 14], "variables": [], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": ["icn"], "operators": ["!="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " ( abs ( temp - a ) ) % ( k + 1 ) !=", "links": [15, 16], "variables": [], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": [], "operators": ["%"], "constants": [], "features": []}, {"string": " k + 1 )", "links": [], "variables": ["k"], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " temp - a )", "links": [], "variables": ["a", "temp", "abs"], "ids": ["lp", "lp"], "nodeId": 16, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " b == - 1 )", "links": [18, 19], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 17, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 18, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["b"], "ids": ["lp", "lp", "if"], "nodeId": 19, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " b = temp ;", "links": [], "variables": ["temp"], "ids": ["lp", "lp", "if", "if"], "nodeId": 20, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " abs ( temp - b ) % ( k + 1 ) != 0 )", "links": [22, 23], "variables": ["bCount"], "ids": ["lp", "lp", "if", "if"], "nodeId": 21, "featuresSelf": ["icn"], "operators": ["++", "!="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 22, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " abs ( temp - b ) % ( k + 1 ) !=", "links": [24, 25], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 23, "featuresSelf": [], "operators": ["%"], "constants": [], "features": []}, {"string": " k + 1 )", "links": [], "variables": ["k"], "ids": ["lp", "lp", "if"], "nodeId": 24, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " temp - b )", "links": [], "variables": ["b", "temp", "abs", "bCount", "aCount"], "ids": ["lp", "lp", "if"], "nodeId": 25, "featuresSelf": ["break"], "operators": ["-", "++", "++"], "constants": [], "features": []}, {"string": " aCount > 1 &&", "links": [], "variables": ["bCount", "aCount"], "ids": ["lp", "lp"], "nodeId": 26, "featuresSelf": ["icn", "break"], "operators": ["&&", ">", ">"], "constants": ["1", "1"], "features": []}, {"string": " i != n - 1 )", "links": [28, 29], "variables": [], "ids": ["lp"], "nodeId": 27, "featuresSelf": ["icn"], "operators": ["!="], "constants": [], "features": []}, {"string": " n - 1 )", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 28, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 29, "featuresSelf": ["out", "out"], "operators": [], "constants": ["NO\\n)", "YES\\n)"], "features": []}, {"string": " i < n ;", "links": [], "variables": ["count", "n", "i"], "ids": ["lp"], "nodeId": 30, "featuresSelf": [], "operators": ["<"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 31, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i", "temp"], "ids": ["lp", "lp"], "nodeId": 32, "featuresSelf": ["in"], "operators": ["++", "&"], "constants": ["%d,"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 33, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d,", ":1;--;", "lp:3;&;3;&;3;&;%d%d%d,", "lp:0;,;0;,;0;,;0;-;1011", "lp:0;<;0", "lp:", "lp:1;-;1", "lp:", "lplp:1;++;", "lplp:1;&;%d,", "lplp:1;++;", "lplp:0;!=;", "lplp:0", "lplp:0;%;", "lplp:1;+;1", "lplp:3;-;", "lplpif:0;==;", "lplpif:0;-;1", "lplpif:", "lplpifif:", "lplpifif:1;++;1;!=;", "lplpif:0", "lplpif:0;%;", "lplpif:1;+;1", "lplpif:5;-;5;++;5;++;", "lplp:2;&&;2;>;2;>;11", "lp:0;!=;", "lp:1;-;1", "lp:NO\\n)YES\\n)", "lp:3;<;", "lp:", "lplp:2;++;2;&;%d,", ":0"], "expr": ["", "1;&;%d,", "1;--;", "3;&;3;&;3;&;%d%d%d,", "0;,;0;,;0;,;0;-;1011", "0;<;0", "", "1;-;1", "", "1;++;", "1;&;%d,", "1;++;", "0;!=;", "0", "0;%;", "1;+;1", "3;-;", "0;==;", "0;-;1", "", "", "1;++;1;!=;", "0", "0;%;", "1;+;1", "5;-;5;++;5;++;", "2;&&;2;>;2;>;11", "0;!=;", "1;-;1", "NO\\n)YES\\n)", "3;<;", "", "2;++;2;&;%d,", "0"], "basic": ["&", "%d,", "--", "loop", "&", "&", "&", "%d%d%d,", ",", ",", ",", "-", "1", "0", "1", "1", "<", "0", "loop", "-", "1", "++", "&", "%d,", "++", "!=", "0", "%", "+", "1", "-", "==", "-", "1", "++", "!=", "0", "%", "+", "1", "-", "++", "++", "&&", ">", ">", "1", "1", "!=", "-", "1", "NO\\n)", "YES\\n)", "<", "loop", "++", "&", "%d,", "0"], "exprDepend": ["#", "#3;<;", "1;++;#3;<;", "NO\\n)YES\\n)#3;<;"], "controlContextBC": [":&", ":%d,", ":--", "lp:&", "lp:&", "lp:&", "lp:%d%d%d,", "lp:,", "lp:,", "lp:,", "lp:-", "lp:1", "lp:0", "lp:1", "lp:1", "lp:<", "lp:0", "lp:-", "lp:1", "lplp:++", "lplp:&", "lplp:%d,", "lplp:++", "lplp:!=", "lplp:0", "lplp:%", "lplp:+", "lplp:1", "lplp:-", "lplpif:==", "lplpif:-", "lplpif:1", "lplpifif:++", "lplpifif:!=", "lplpif:0", "lplpif:%", "lplpif:+", "lplpif:1", "lplpif:-", "lplpif:++", "lplpif:++", "lplp:&&", "lplp:>", "lplp:>", "lplp:1", "lplp:1", "lp:!=", "lp:-", "lp:1", "lp:NO\\n)", "lp:YES\\n)", "lp:<", "lplp:++", "lplp:&", "lplp:%d,", ":0"]}]}