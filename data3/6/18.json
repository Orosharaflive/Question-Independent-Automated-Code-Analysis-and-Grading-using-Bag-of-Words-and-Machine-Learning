{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "n;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "k"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": "int;", "links": [], "variables": ["int"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": ["0", "0", "1"], "features": []}, {"string": " i < n ;", "links": [], "variables": ["int", "n", "i"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 8, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "input;", "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["input"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " possible && input )", "links": [], "variables": ["input", "possible"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": ["icn"], "operators": ["&&"], "constants": [], "features": []}, {"string": " number2 = input ;", "links": [], "variables": ["number1", "input", "number2"], "ids": ["lp", "lp", "if"], "nodeId": 12, "featuresSelf": ["icn", "icn"], "operators": ["!", "&&", "!", "!="], "constants": [], "features": []}, {"string": " number1 != input &&", "links": [], "variables": ["input", "number2", "number1", "possible"], "ids": ["lp", "lp", "if"], "nodeId": 13, "featuresSelf": ["icn"], "operators": ["&&", "!=", "!=", "--"], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["possible"], "ids": ["lp"], "nodeId": 14, "featuresSelf": ["out"], "operators": [], "constants": ["%s\\n,", "YES:", "NO)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 15, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d,", ":1;--;", "lp:", "lp:2;&;2;&;%d%d,", "lp:001", "lp:3;<;0", "lp:", "lplp:1;++;", "lplp:", "lplp:1;&;%d,", "lplp:2;&&;", "lplpif:3;!;3;&&;3;!;3;!=;", "lplpif:4;&&;4;!=;4;!=;4;--;", "lp:%s\\n,YES:NO)", ":0"], "expr": ["", "1;&;%d,", "1;--;", "", "2;&;2;&;%d%d,", "001", "3;<;0", "", "1;++;", "", "1;&;%d,", "2;&&;", "3;!;3;&&;3;!;3;!=;", "4;&&;4;!=;4;!=;4;--;", "%s\\n,YES:NO)", "0"], "basic": ["&", "%d,", "--", "loop", "&", "&", "%d%d,", "0", "0", "1", "<", "0", "loop", "++", "&", "%d,", "&&", "!", "&&", "!", "!=", "&&", "!=", "!=", "--", "%s\\n,", "YES:", "NO)", "0"], "exprDepend": [], "controlContextBC": [":&", ":%d,", ":--", "lp:&", "lp:&", "lp:%d%d,", "lp:0", "lp:0", "lp:1", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", "lplp:&&", "lplpif:!", "lplpif:&&", "lplpif:!", "lplpif:!=", "lplpif:&&", "lplpif:!=", "lplpif:!=", "lplpif:--", "lp:%s\\n,", "lp:YES:", "lp:NO)", ":0"]}]}