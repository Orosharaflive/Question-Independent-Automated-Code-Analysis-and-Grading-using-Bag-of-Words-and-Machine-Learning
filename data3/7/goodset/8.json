{"nodes": [{"string": " n == 0 )", "links": [], "variables": ["n"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "icn", "return"], "operators": ["==", "=="], "constants": ["1", "2", "0", "0"], "features": []}, {"string": " n % 2 == 0 )", "links": [2, 3], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " n + 1 + lower ( n / 2 ) + lower ( ( n ) / 2 - 1 ) )", "links": [4, 7], "variables": ["n"], "ids": [], "nodeId": 3, "featuresSelf": ["return"], "operators": ["%", "+"], "constants": ["2"], "features": []}, {"string": " ( n ) / 2 - 1 )", "links": [5, 6], "variables": [], "ids": ["if"], "nodeId": 4, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["if"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " ( n ) / 2 -", "links": [], "variables": ["n", "lower"], "ids": ["if"], "nodeId": 6, "featuresSelf": [], "operators": ["/"], "constants": ["2"], "features": []}, {"string": " n + 1 + lower ( n / 2 ) +", "links": [8, 9], "variables": [], "ids": ["if"], "nodeId": 7, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " n / 2 )", "links": [], "variables": ["n", "lower"], "ids": ["if"], "nodeId": 8, "featuresSelf": [], "operators": ["/"], "constants": ["2"], "features": []}, {"string": " n + 1 + 2 * lower ( ( ( n + 1 ) / 2 ) - 1 ) )", "links": [10, 17], "variables": ["n"], "ids": ["if"], "nodeId": 9, "featuresSelf": ["return"], "operators": ["+", "+"], "constants": ["1"], "features": []}, {"string": " 2 * lower ( ( ( n + 1 ) / 2 ) - 1 ) )", "links": [11, 16], "variables": [], "ids": [], "nodeId": 10, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " ( ( n + 1 ) / 2 ) - 1 )", "links": [12, 13], "variables": [], "ids": [], "nodeId": 11, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " ( n + 1 ) / 2 )", "links": [14, 15], "variables": [], "ids": [], "nodeId": 13, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " n + 1 )", "links": [], "variables": ["n", "lower"], "ids": [], "nodeId": 15, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 16, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " n + 1 +", "links": [], "variables": ["n"], "ids": [], "nodeId": 17, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": "wire;", "links": [], "variables": [], "ids": [], "nodeId": 18, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 19, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 20, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " t > 0 )", "links": [], "variables": ["t"], "ids": [], "nodeId": 21, "featuresSelf": ["cn", "loop"], "operators": [">"], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "wire"], "ids": ["lp"], "nodeId": 22, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": " ( n * ( n + 3 ) ) / 2 ;", "links": [24, 25], "variables": [], "ids": ["lp"], "nodeId": 23, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 24, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " n * ( n + 3 ) )", "links": [26, 27], "variables": [], "ids": ["lp"], "nodeId": 25, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " n + 3 )", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 26, "featuresSelf": [], "operators": ["+"], "constants": ["3"], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 27, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " ll = lower ( n ) ;", "links": [], "variables": ["n", "lower"], "ids": ["lp"], "nodeId": 28, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " wire - ul )", "links": [], "variables": ["ul", "wire", "ll"], "ids": ["lp"], "nodeId": 29, "featuresSelf": ["icn", "out", "icn", "out", "icn", "out"], "operators": ["&&", "<=", ">=", "<", ">", "-"], "constants": ["0\\n)", "-1\\n)", "%d\\n,"], "features": []}, {"string": " t -- ;", "links": [], "variables": ["t"], "ids": ["lp"], "nodeId": 30, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 31, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":1;==;1;==;1200", ":0;==;", ":0", ":1;%;1;+;2", "if:0;-;", "if:1", "if:2;/;2", "if:0;+;", "if:2;/;2", "if:1;+;1;+;1", ":0;*;", ":0;-;", ":1", ":0;/;", ":2", ":2;+;1", ":2", ":1;+;1", ":1;==;1;==;1200", ":0;==;", ":0", ":1;%;1;+;2", "if:0;-;", "if:1", "if:2;/;2", "if:0;+;", "if:2;/;2", "if:1;+;1;+;1", ":0;*;", ":0;-;", ":1", ":0;/;", ":2", ":2;+;1", ":2", ":1;+;1", ":", ":", ":1;&;%d,", ":1;>;0", "lp:2;&;2;&;%d%d,", "lp:0;/;", "lp:2", "lp:0;*;", "lp:1;+;3", "lp:", "lp:", "lp:3;&&;3;<=;3;>=;3;<;3;>;3;-;0\\n)-1\\n)%d\\n,", "lp:1;--;", ":0"], "expr": ["1;==;1;==;1200", "0;==;", "0", "1;%;1;+;2", "0;-;", "1", "2;/;2", "0;+;", "2;/;2", "1;+;1;+;1", "0;*;", "0;-;", "1", "0;/;", "2", "2;+;1", "2", "1;+;1", "1;==;1;==;1200", "0;==;", "0", "1;%;1;+;2", "0;-;", "1", "2;/;2", "0;+;", "2;/;2", "1;+;1;+;1", "0;*;", "0;-;", "1", "0;/;", "2", "2;+;1", "2", "1;+;1", "", "", "1;&;%d,", "1;>;0", "2;&;2;&;%d%d,", "0;/;", "2", "0;*;", "1;+;3", "", "", "3;&&;3;<=;3;>=;3;<;3;>;3;-;0\\n)-1\\n)%d\\n,", "1;--;", "0"], "basic": ["==", "==", "1", "2", "0", "0", "==", "0", "%", "+", "2", "-", "1", "/", "2", "+", "/", "2", "+", "+", "1", "*", "-", "1", "/", "2", "+", "1", "2", "+", "1", "==", "==", "1", "2", "0", "0", "==", "0", "%", "+", "2", "-", "1", "/", "2", "+", "/", "2", "+", "+", "1", "*", "-", "1", "/", "2", "+", "1", "2", "+", "1", "&", "%d,", ">", "0", "loop", "&", "&", "%d%d,", "/", "2", "*", "+", "3", "&&", "<=", ">=", "<", ">", "-", "0\\n)", "-1\\n)", "%d\\n,", "--", "0"], "exprDepend": [], "controlContextBC": [":==", ":==", ":1", ":2", ":0", ":0", ":==", ":0", ":%", ":+", ":2", "if:-", "if:1", "if:/", "if:2", "if:+", "if:/", "if:2", "if:+", "if:+", "if:1", ":*", ":-", ":1", ":/", ":2", ":+", ":1", ":2", ":+", ":1", ":==", ":==", ":1", ":2", ":0", ":0", ":==", ":0", ":%", ":+", ":2", "if:-", "if:1", "if:/", "if:2", "if:+", "if:/", "if:2", "if:+", "if:+", "if:1", ":*", ":-", ":1", ":/", ":2", ":+", ":1", ":2", ":+", ":1", ":&", ":%d,", ":>", ":0", "lp:&", "lp:&", "lp:%d%d,", "lp:/", "lp:2", "lp:*", "lp:+", "lp:3", "lp:&&", "lp:<=", "lp:>=", "lp:<", "lp:>", "lp:-", "lp:0\\n)", "lp:-1\\n)", "lp:%d\\n,", "lp:--", ":0"]}]}