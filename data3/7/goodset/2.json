{"nodes": [{"string": "mid;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " l == r )", "links": [], "variables": ["r", "l"], "ids": [], "nodeId": 1, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " lo + 2 ;", "links": [], "variables": ["lo"], "ids": ["if"], "nodeId": 2, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " r == l + 1 )", "links": [4, 5], "variables": [], "ids": ["if"], "nodeId": 3, "featuresSelf": ["return", "icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " l + 1 )", "links": [], "variables": ["l"], "ids": [], "nodeId": 4, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["r"], "ids": [], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " lo + r - l + 2 ;", "links": [7, 8], "variables": [], "ids": ["if"], "nodeId": 6, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["if"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " lo + r - l +", "links": [9, 10], "variables": [], "ids": ["if"], "nodeId": 8, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["l"], "ids": ["if"], "nodeId": 9, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " lo + r -", "links": [], "variables": ["r", "lo"], "ids": ["if"], "nodeId": 10, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " lo + 2 ;", "links": [], "variables": ["lo"], "ids": ["if"], "nodeId": 11, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " return ;", "links": [], "variables": [], "ids": ["if"], "nodeId": 12, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " ( l + r ) / 2 ;", "links": [14, 15], "variables": [], "ids": [], "nodeId": 13, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " l + r )", "links": [], "variables": ["r", "l"], "ids": [], "nodeId": 15, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " lo + r - l + 2 ;", "links": [17, 18], "variables": [], "ids": [], "nodeId": 16, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 17, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " lo + r - l +", "links": [19, 20], "variables": [], "ids": [], "nodeId": 18, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["l"], "ids": [], "nodeId": 19, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " lo + r -", "links": [], "variables": ["r", "lo"], "ids": [], "nodeId": 20, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " mid - 1 )", "links": [], "variables": ["l", "mid", "fun"], "ids": [], "nodeId": 21, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": " mid + 1 ,", "links": [], "variables": ["mid", "r", "fun"], "ids": [], "nodeId": 22, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " return ;", "links": [], "variables": [], "ids": [], "nodeId": 23, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 24, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 25, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 26, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "n;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 27, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "m"], "ids": ["lp"], "nodeId": 28, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": " n == 1 )", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 29, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["1"], "features": []}, {"string": " lo = 2 ;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 30, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " n == 2 )", "links": [], "variables": ["n"], "ids": ["lp", "if"], "nodeId": 31, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["2", "2"], "features": []}, {"string": " lo = 5 ;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 32, "featuresSelf": [], "operators": [], "constants": ["5"], "features": []}, {"string": " hi = 5 ;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 33, "featuresSelf": [], "operators": [], "constants": ["5"], "features": []}, {"string": " lo = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 34, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "fun", "links": [], "variables": ["n", "fun"], "ids": ["lp"], "nodeId": 35, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " ( n * ( n + 3 ) ) / 2 ;", "links": [37, 38], "variables": [], "ids": ["lp"], "nodeId": 36, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 37, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " n * ( n + 3 ) )", "links": [39, 40], "variables": [], "ids": ["lp"], "nodeId": 38, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " n + 3 )", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 39, "featuresSelf": [], "operators": ["+"], "constants": ["3"], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 40, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " m - hi ;", "links": [], "variables": ["lo", "m", "hi"], "ids": ["lp"], "nodeId": 41, "featuresSelf": ["icn", "icn"], "operators": ["<", "-", "&&", "<=", ">=", "-"], "constants": ["1", "0"], "features": []}, {"string": "printf", "links": [], "variables": ["ans"], "ids": ["lp"], "nodeId": 42, "featuresSelf": ["out"], "operators": [], "constants": ["%d\\n,"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 43, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":2;==;", "if:1;+;2", "if:0;==;", ":1;+;1", ":", "if:0;+;", "if:2", "if:0;-;", "if:", "if:2;+;", "if:1;+;2", "if:", ":0;/;", ":2", ":2;+;", ":0;+;", ":2", ":0;-;", ":", ":2;+;", ":3;-;1", ":3;+;1", ":", ":", ":2;==;", "if:1;+;2", "if:0;==;", ":1;+;1", ":", "if:0;+;", "if:2", "if:0;-;", "if:", "if:2;+;", "if:1;+;2", "if:", ":0;/;", ":2", ":2;+;", ":0;+;", ":2", ":0;-;", ":", ":2;+;", ":3;-;1", ":3;+;1", ":", ":", ":1;&;%d,", ":1;--;", "lp:", "lp:2;&;2;&;%d%d,", "lp:1;==;1", "lpif:2", "lpif:1;==;22", "lpif:5", "lpif:5", "lp:0", "lp:1", "lp:0;/;", "lp:2", "lp:0;*;", "lp:1;+;3", "lp:", "lp:3;<;3;-;3;&&;3;<=;3;>=;3;-;10", "lp:%d\\n,", ":0"], "expr": ["", "2;==;", "1;+;2", "0;==;", "1;+;1", "", "0;+;", "2", "0;-;", "", "2;+;", "1;+;2", "", "0;/;", "2", "2;+;", "0;+;", "2", "0;-;", "", "2;+;", "3;-;1", "3;+;1", "", "", "2;==;", "1;+;2", "0;==;", "1;+;1", "", "0;+;", "2", "0;-;", "", "2;+;", "1;+;2", "", "0;/;", "2", "2;+;", "0;+;", "2", "0;-;", "", "2;+;", "3;-;1", "3;+;1", "", "", "1;&;%d,", "1;--;", "", "2;&;2;&;%d%d,", "1;==;1", "2", "1;==;22", "5", "5", "0", "1", "0;/;", "2", "0;*;", "1;+;3", "", "3;<;3;-;3;&&;3;<=;3;>=;3;-;10", "%d\\n,", "0"], "basic": ["==", "+", "2", "==", "+", "1", "+", "2", "-", "+", "+", "2", "/", "2", "+", "+", "2", "-", "+", "-", "1", "+", "1", "==", "+", "2", "==", "+", "1", "+", "2", "-", "+", "+", "2", "/", "2", "+", "+", "2", "-", "+", "-", "1", "+", "1", "&", "%d,", "--", "loop", "&", "&", "%d%d,", "==", "1", "2", "==", "2", "2", "5", "5", "0", "1", "/", "2", "*", "+", "3", "<", "-", "&&", "<=", ">=", "-", "1", "0", "%d\\n,", "0"], "exprDepend": ["1;+;2#0;+;", "1;+;2#1;+;2", "2;+;#1;+;2", "1;+;2#0;+;", "2;+;#0;+;", "1;+;2#0;+;", "1;+;2#0;+;", "1;+;2#1;+;2", "2;+;#1;+;2", "1;+;2#0;+;", "2;+;#0;+;", "1;+;2#0;+;", "1;+;2#2", "2;+;#2", "1;+;2#2", "2;+;#2", "1;+;2#5", "2;+;#5", "1;+;2#5", "2;+;#5", "1;+;2#0", "2;+;#0", "1;+;2#0", "2;+;#0"], "controlContextBC": [":==", "if:+", "if:2", "if:==", ":+", ":1", "if:+", "if:2", "if:-", "if:+", "if:+", "if:2", ":/", ":2", ":+", ":+", ":2", ":-", ":+", ":-", ":1", ":+", ":1", ":==", "if:+", "if:2", "if:==", ":+", ":1", "if:+", "if:2", "if:-", "if:+", "if:+", "if:2", ":/", ":2", ":+", ":+", ":2", ":-", ":+", ":-", ":1", ":+", ":1", ":&", ":%d,", ":--", "lp:&", "lp:&", "lp:%d%d,", "lp:==", "lp:1", "lpif:2", "lpif:==", "lpif:2", "lpif:2", "lpif:5", "lpif:5", "lp:0", "lp:1", "lp:/", "lp:2", "lp:*", "lp:+", "lp:3", "lp:<", "lp:-", "lp:&&", "lp:<=", "lp:>=", "lp:-", "lp:1", "lp:0", "lp:%d\\n,", ":0"]}]}