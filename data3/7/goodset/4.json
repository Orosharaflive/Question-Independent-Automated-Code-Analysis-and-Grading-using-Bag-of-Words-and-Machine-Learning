{"nodes": [{"string": " x + 1 + minValue ( x / 2 ) + minValue ( ( x - 1 ) / 2 ) ;", "links": [1, 4], "variables": ["x", "mini"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "icn", "return", "return"], "operators": ["==", "==", "+"], "constants": ["1", "0", "2", "1"], "features": []}, {"string": " ( x - 1 ) / 2 )", "links": [2, 3], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " x - 1 )", "links": [], "variables": ["x", "minValue"], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": " x + 1 + minValue ( x / 2 ) +", "links": [5, 6], "variables": [], "ids": [], "nodeId": 4, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " x / 2 )", "links": [], "variables": ["x", "minValue"], "ids": [], "nodeId": 5, "featuresSelf": [], "operators": ["/"], "constants": ["2"], "features": []}, {"string": " x + 1 +", "links": [], "variables": ["x"], "ids": [], "nodeId": 6, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": "n;", "links": [], "variables": [], "ids": [], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " mini [ 0 ] = 2 ;", "links": [], "variables": [], "ids": [], "nodeId": 8, "featuresSelf": [], "operators": [], "constants": ["0", "2"], "features": []}, {"string": " mini [ 1 ] = 5 ;", "links": [], "variables": [], "ids": [], "nodeId": 9, "featuresSelf": [], "operators": [], "constants": ["1", "5"], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 10, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 11, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "m"], "ids": ["lp"], "nodeId": 12, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": " n + ( n * ( n + 1 ) ) / 2 ;", "links": [14, 19], "variables": [], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " ( n * ( n + 1 ) ) / 2 ;", "links": [15, 16], "variables": [], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " n * ( n + 1 ) )", "links": [17, 18], "variables": [], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " n + 1 )", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 17, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 18, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 19, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " min = minValue ( n ) ;", "links": [], "variables": ["n", "minValue"], "ids": ["lp"], "nodeId": 20, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " m >= min )", "links": [], "variables": ["min", "m"], "ids": ["lp"], "nodeId": 21, "featuresSelf": ["icn"], "operators": [">="], "constants": [], "features": []}, {"string": " m - max )", "links": [], "variables": ["max", "m"], "ids": ["lp", "if"], "nodeId": 22, "featuresSelf": ["icn", "out", "out", "out"], "operators": ["<=", "-"], "constants": ["0\\n)", "%d\\n,", "-1\\n)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 23, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":2;==;2;==;2;+;1021", ":0;/;", ":2", ":2;-;1", ":0;+;", ":2;/;2", ":1;+;1", ":2;==;2;==;2;+;1021", ":0;/;", ":2", ":2;-;1", ":0;+;", ":2;/;2", ":1;+;1", ":", ":02", ":15", ":1;&;%d,", ":1;--;", "lp:2;&;2;&;%d%d,", "lp:0;+;", "lp:0;/;", "lp:2", "lp:0;*;", "lp:1;+;1", "lp:", "lp:", "lp:", "lp:2;>=;", "lpif:2;<=;2;-;0\\n)%d\\n,-1\\n)", ":0"], "expr": ["2;==;2;==;2;+;1021", "0;/;", "2", "2;-;1", "0;+;", "2;/;2", "1;+;1", "2;==;2;==;2;+;1021", "0;/;", "2", "2;-;1", "0;+;", "2;/;2", "1;+;1", "", "02", "15", "1;&;%d,", "1;--;", "2;&;2;&;%d%d,", "0;+;", "0;/;", "2", "0;*;", "1;+;1", "", "", "", "2;>=;", "2;<=;2;-;0\\n)%d\\n,-1\\n)", "0"], "basic": ["==", "==", "+", "1", "0", "2", "1", "/", "2", "-", "1", "+", "/", "2", "+", "1", "==", "==", "+", "1", "0", "2", "1", "/", "2", "-", "1", "+", "/", "2", "+", "1", "0", "2", "1", "5", "&", "%d,", "--", "loop", "&", "&", "%d%d,", "+", "/", "2", "*", "+", "1", ">=", "<=", "-", "0\\n)", "%d\\n,", "-1\\n)", "0"], "exprDepend": ["2;==;2;==;2;+;1021#02", "2;==;2;==;2;+;1021#15"], "controlContextBC": [":==", ":==", ":+", ":1", ":0", ":2", ":1", ":/", ":2", ":-", ":1", ":+", ":/", ":2", ":+", ":1", ":==", ":==", ":+", ":1", ":0", ":2", ":1", ":/", ":2", ":-", ":1", ":+", ":/", ":2", ":+", ":1", ":0", ":2", ":1", ":5", ":&", ":%d,", ":--", "lp:&", "lp:&", "lp:%d%d,", "lp:+", "lp:/", "lp:2", "lp:*", "lp:+", "lp:1", "lp:>=", "lpif:<=", "lpif:-", "lpif:0\\n)", "lpif:%d\\n,", "lpif:-1\\n)", ":0"]}]}