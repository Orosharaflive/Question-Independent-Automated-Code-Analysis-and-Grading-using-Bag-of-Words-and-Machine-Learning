{"nodes": [{"string": " len == 1 )", "links": [], "variables": ["len"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return"], "operators": ["=="], "constants": ["1", "0"], "features": []}, {"string": " len + bin ( len / 2 ) + bin ( ceil ( ( ( double ) len / 2 ) ) ) ;", "links": [2, 3], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": ["return"], "operators": ["+"], "constants": [], "features": []}, {"string": " ( double ) len / 2 )", "links": [], "variables": ["len", "ceil", "bin"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": ["/"], "constants": ["2"], "features": []}, {"string": " len + bin ( len / 2 ) +", "links": [4, 5], "variables": [], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " len / 2 )", "links": [], "variables": ["len", "bin"], "ids": [], "nodeId": 4, "featuresSelf": [], "operators": ["/"], "constants": ["2"], "features": []}, {"string": null, "links": [], "variables": ["len"], "ids": [], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "i;", "links": [], "variables": [], "ids": [], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["p"], "ids": [], "nodeId": 7, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( p -- )", "links": [], "variables": ["p"], "ids": [], "nodeId": 8, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "m"], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": "len;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " len = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " n + 1 )", "links": [], "variables": ["n", "bin"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " ( ( n + 1 ) * ( n + 2 ) ) / 2 - 1 ;", "links": [14, 15], "variables": [], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " ( ( n + 1 ) * ( n + 2 ) ) / 2 -", "links": [16, 17], "variables": [], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " ( n + 1 ) * ( n + 2 ) )", "links": [18, 19], "variables": [], "ids": ["lp"], "nodeId": 17, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " n + 2 )", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 18, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " n + 1 )", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 19, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " ans = - 1 ;", "links": [], "variables": ["max", "m", "len"], "ids": ["lp"], "nodeId": 20, "featuresSelf": ["icn", "icn", "icn"], "operators": [">=", "-", "&&", "<", ">=", "<", "-"], "constants": ["0", "1"], "features": []}, {"string": "printf", "links": [], "variables": ["ans"], "ids": ["lp"], "nodeId": 21, "featuresSelf": ["out"], "operators": [], "constants": ["%d\\n,"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 22, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":1;==;10", ":0;+;", ":3;/;2", ":0;+;", ":2;/;2", ":", ":1;==;10", ":0;+;", ":3;/;2", ":0;+;", ":2;/;2", ":", ":", ":1;&;%d,", ":1;--;", "lp:2;&;2;&;%d%d,", "lp:", "lp:0", "lp:2;+;1", "lp:0;-;", "lp:1", "lp:0;/;", "lp:2", "lp:0;*;", "lp:1;+;2", "lp:1;+;1", "lp:3;>=;3;-;3;&&;3;<;3;>=;3;<;3;-;01", "lp:%d\\n,", ":0"], "expr": ["1;==;10", "0;+;", "3;/;2", "0;+;", "2;/;2", "", "1;==;10", "0;+;", "3;/;2", "0;+;", "2;/;2", "", "", "1;&;%d,", "1;--;", "2;&;2;&;%d%d,", "", "0", "2;+;1", "0;-;", "1", "0;/;", "2", "0;*;", "1;+;2", "1;+;1", "3;>=;3;-;3;&&;3;<;3;>=;3;<;3;-;01", "%d\\n,", "0"], "basic": ["==", "1", "0", "+", "/", "2", "+", "/", "2", "==", "1", "0", "+", "/", "2", "+", "/", "2", "&", "%d,", "--", "loop", "&", "&", "%d%d,", "0", "+", "1", "-", "1", "/", "2", "*", "+", "2", "+", "1", ">=", "-", "&&", "<", ">=", "<", "-", "0", "1", "%d\\n,", "0"], "exprDepend": ["1;==;10#0", "3;/;2#0", "2;/;2#0", "#0", "1;==;10#2;+;1", "3;/;2#2;+;1", "2;/;2#2;+;1", "#2;+;1"], "controlContextBC": [":==", ":1", ":0", ":+", ":/", ":2", ":+", ":/", ":2", ":==", ":1", ":0", ":+", ":/", ":2", ":+", ":/", ":2", ":&", ":%d,", ":--", "lp:&", "lp:&", "lp:%d%d,", "lp:0", "lp:+", "lp:1", "lp:-", "lp:1", "lp:/", "lp:2", "lp:*", "lp:+", "lp:2", "lp:+", "lp:1", "lp:>=", "lp:-", "lp:&&", "lp:<", "lp:>=", "lp:<", "lp:-", "lp:0", "lp:1", "lp:%d\\n,", ":0"]}]}