{"nodes": [{"string": "d;", "links": [], "variables": ["d"], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " start + 1 < end )", "links": [2, 3], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": ["icn"], "operators": ["<"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["end"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " start + 1 <", "links": [], "variables": ["start"], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": "one_count;", "links": [], "variables": ["one_count"], "ids": ["if"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "d;", "links": [], "variables": ["d"], "ids": ["if"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "i;", "links": [], "variables": [], "ids": ["if"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i < y ;", "links": [], "variables": ["y", "i"], "ids": ["if"], "nodeId": 7, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["if"], "nodeId": 8, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["if", "lp"], "nodeId": 9, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " wall [ i ] == 0 )", "links": [], "variables": ["wall", "i", "one_count"], "ids": ["if", "lp"], "nodeId": 10, "featuresSelf": ["icn", "break"], "operators": ["==", "++"], "constants": ["0"], "features": []}, {"string": " one_count == y )", "links": [], "variables": ["y", "one_count"], "ids": ["if"], "nodeId": 11, "featuresSelf": ["icn", "return"], "operators": ["=="], "constants": ["0"], "features": []}, {"string": " ( start + end ) / 2 ;", "links": [13, 14], "variables": [], "ids": ["if"], "nodeId": 12, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["if"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " start + end )", "links": [], "variables": ["end", "start"], "ids": ["if"], "nodeId": 14, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " y + 2 ,", "links": [], "variables": ["wall", "y", "start", "end", "soldier", "distance"], "ids": ["if"], "nodeId": 15, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " d + p + func ( wall , y + 2 , start , soldier ) + func ( wall , y + 2 , soldier , end ) ;", "links": [17, 18], "variables": [], "ids": ["if"], "nodeId": 16, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " y + 2 ,", "links": [], "variables": ["wall", "y", "soldier", "end", "func"], "ids": ["if"], "nodeId": 17, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " d + p + func ( wall , y + 2 , start , soldier ) +", "links": [19, 20], "variables": [], "ids": ["if"], "nodeId": 18, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " y + 2 ,", "links": [], "variables": ["wall", "y", "start", "soldier", "func"], "ids": ["if"], "nodeId": 19, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " d + p +", "links": [], "variables": ["p", "d"], "ids": ["if"], "nodeId": 20, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " return d ;", "links": [], "variables": ["d"], "ids": ["if"], "nodeId": 21, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " return d ;", "links": [], "variables": ["d"], "ids": [], "nodeId": 22, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " start >= end ||", "links": [], "variables": ["end", "soldier", "start"], "ids": [], "nodeId": 23, "featuresSelf": ["icn", "return"], "operators": ["||", "==", "||", "==", ">="], "constants": ["0"], "features": []}, {"string": " wall + soldier )", "links": [], "variables": [], "ids": [], "nodeId": 24, "featuresSelf": [], "operators": ["", "+"], "constants": ["1"], "features": []}, {"string": " end - start )", "links": [], "variables": ["start", "end"], "ids": [], "nodeId": 25, "featuresSelf": ["return"], "operators": ["-"], "constants": [], "features": []}, {"string": "i;", "links": [], "variables": [], "ids": [], "nodeId": 26, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < y ;", "links": [], "variables": ["y", "i"], "ids": [], "nodeId": 27, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 28, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 29, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["wall", "i"], "ids": ["lp"], "nodeId": 30, "featuresSelf": ["out"], "operators": [], "constants": ["%d,"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": [], "nodeId": 31, "featuresSelf": ["out"], "operators": [], "constants": ["\\n)"], "features": []}, {"string": "test;", "links": [], "variables": [], "ids": [], "nodeId": 32, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["test"], "ids": [], "nodeId": 33, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( test -- )", "links": [], "variables": ["test"], "ids": [], "nodeId": 34, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "n;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 35, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "m"], "ids": ["lp"], "nodeId": 36, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": "i;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 37, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "x;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 38, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " n + 2 ]", "links": [], "variables": ["wall", "n"], "ids": ["lp"], "nodeId": 39, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": "flag;", "links": [], "variables": ["flag"], "ids": ["lp"], "nodeId": 40, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " n + ( n * ( n + 1 ) / 2 ) ;", "links": [42, 47], "variables": ["max_distance"], "ids": ["lp"], "nodeId": 41, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " n * ( n + 1 ) / 2 )", "links": [43, 44], "variables": [], "ids": ["lp"], "nodeId": 42, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 43, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " n * ( n + 1 ) /", "links": [45, 46], "variables": [], "ids": ["lp"], "nodeId": 44, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " n + 1 )", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 45, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 46, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 47, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < n + 2 ;", "links": [50, 51], "variables": [], "ids": ["lp"], "nodeId": 48, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 49, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": " n + 2 ;", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 50, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 51, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 52, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " wall [ i ] = 0 ;", "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 53, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " wall [ 0 ] = 1 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 54, "featuresSelf": [], "operators": [], "constants": ["0", "1"], "features": []}, {"string": " n + 1 ]", "links": [], "variables": [], "ids": ["lp"], "nodeId": 55, "featuresSelf": [], "operators": ["+"], "constants": ["1", "1"], "features": []}, {"string": " x = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 56, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " n + 1 ;", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 57, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": "min_distance;", "links": [], "variables": ["min_distance"], "ids": ["lp"], "nodeId": 58, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " n + 2 ,", "links": [], "variables": ["wall", "n", "x", "y", "func"], "ids": ["lp"], "nodeId": 59, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " m >= min_distance &&", "links": [], "variables": ["min_distance", "m", "max_distance"], "ids": ["lp"], "nodeId": 60, "featuresSelf": ["icn", "out", "icn"], "operators": ["<", "&&", "<=", ">="], "constants": ["-1\\n)"], "features": []}, {"string": " m > max_distance )", "links": [], "variables": ["max_distance", "m"], "ids": ["lp", "if"], "nodeId": 61, "featuresSelf": ["out", "icn"], "operators": [">"], "constants": ["0\\n)"], "features": []}, {"string": " m - max_distance )", "links": [], "variables": ["max_distance", "m"], "ids": ["lp", "if"], "nodeId": 62, "featuresSelf": ["out"], "operators": ["-"], "constants": ["%d\\n,"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 63, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":0", ":0;<;", ":", ":1;+;1", "if:0", "if:0", "if:0", "if:2;<;0", "if:", "iflp:1;++;", "iflp:3;==;3;++;0", "if:2;==;0", "if:0;/;", "if:2", "if:2;+;", "if:6;+;2", "if:0;+;", "if:5;+;2", "if:0;+;", "if:5;+;2", "if:2;+;", "if:", ":", ":0", ":0;<;", ":", ":1;+;1", "if:0", "if:0", "if:0", "if:2;<;0", "if:", "iflp:1;++;", "iflp:3;==;3;++;0", "if:2;==;0", "if:0;/;", "if:2", "if:2;+;", "if:6;+;2", "if:0;+;", "if:5;+;2", "if:0;+;", "if:5;+;2", "if:2;+;", "if:", ":", ":3;||;3;==;3;||;3;==;3;>=;0", ":0;;0;+;1", ":2;-;", ":0", ":0;<;", ":", ":1;+;1", "if:0", "if:0", "if:0", "if:2;<;0", "if:", "iflp:1;++;", "iflp:3;==;3;++;0", "if:2;==;0", "if:0;/;", "if:2", "if:2;+;", "if:6;+;2", "if:0;+;", "if:5;+;2", "if:0;+;", "if:5;+;2", "if:2;+;", "if:", ":", ":3;||;3;==;3;||;3;==;3;>=;0", ":0;;0;+;1", ":2;-;", ":", ":2;<;0", ":", "lp:1;++;", "lp:%d,", ":\\n)", ":0", ":0;<;", ":", ":1;+;1", "if:0", "if:0", "if:0", "if:2;<;0", "if:", "iflp:1;++;", "iflp:3;==;3;++;0", "if:2;==;0", "if:0;/;", "if:2", "if:2;+;", "if:6;+;2", "if:0;+;", "if:5;+;2", "if:0;+;", "if:5;+;2", "if:2;+;", "if:", ":", ":3;||;3;==;3;||;3;==;3;>=;0", ":0;;0;+;1", ":2;-;", ":", ":2;<;0", ":", "lp:1;++;", "lp:%d,", ":\\n)", ":", ":1;&;%d,", ":1;--;", "lp:", "lp:2;&;2;&;%d%d,", "lp:0", "lp:", "lp:2;+;2", "lp:0", "lp:1;+;", "lp:0;/;", "lp:2", "lp:0;*;", "lp:1;+;1", "lp:", "lp:", "lp:0;<;0", "lp:", "lp:1;+;2", "lp:", "lplp:1;++;", "lplp:0", "lp:01", "lp:0;+;11", "lp:0", "lp:1;+;1", "lp:0", "lp:5;+;2", "lp:3;<;3;&&;3;<=;3;>=;-1\\n)", "lpif:2;>;0\\n)", "lpif:2;-;%d\\n,", ":0"], "expr": ["0", "0;<;", "", "1;+;1", "0", "0", "0", "2;<;0", "", "1;++;", "3;==;3;++;0", "2;==;0", "0;/;", "2", "2;+;", "6;+;2", "0;+;", "5;+;2", "0;+;", "5;+;2", "2;+;", "", "", "0", "0;<;", "", "1;+;1", "0", "0", "0", "2;<;0", "", "1;++;", "3;==;3;++;0", "2;==;0", "0;/;", "2", "2;+;", "6;+;2", "0;+;", "5;+;2", "0;+;", "5;+;2", "2;+;", "", "", "3;||;3;==;3;||;3;==;3;>=;0", "0;;0;+;1", "2;-;", "0", "0;<;", "", "1;+;1", "0", "0", "0", "2;<;0", "", "1;++;", "3;==;3;++;0", "2;==;0", "0;/;", "2", "2;+;", "6;+;2", "0;+;", "5;+;2", "0;+;", "5;+;2", "2;+;", "", "", "3;||;3;==;3;||;3;==;3;>=;0", "0;;0;+;1", "2;-;", "", "2;<;0", "", "1;++;", "%d,", "\\n)", "0", "0;<;", "", "1;+;1", "0", "0", "0", "2;<;0", "", "1;++;", "3;==;3;++;0", "2;==;0", "0;/;", "2", "2;+;", "6;+;2", "0;+;", "5;+;2", "0;+;", "5;+;2", "2;+;", "", "", "3;||;3;==;3;||;3;==;3;>=;0", "0;;0;+;1", "2;-;", "", "2;<;0", "", "1;++;", "%d,", "\\n)", "", "1;&;%d,", "1;--;", "", "2;&;2;&;%d%d,", "0", "", "2;+;2", "0", "1;+;", "0;/;", "2", "0;*;", "1;+;1", "", "", "0;<;0", "", "1;+;2", "", "1;++;", "0", "01", "0;+;11", "0", "1;+;1", "0", "5;+;2", "3;<;3;&&;3;<=;3;>=;-1\\n)", "2;>;0\\n)", "2;-;%d\\n,", "0"], "basic": ["0", "<", "+", "1", "0", "0", "0", "<", "0", "loop", "++", "==", "++", "0", "==", "0", "/", "2", "+", "+", "2", "+", "+", "2", "+", "+", "2", "+", "0", "<", "+", "1", "0", "0", "0", "<", "0", "loop", "++", "==", "++", "0", "==", "0", "/", "2", "+", "+", "2", "+", "+", "2", "+", "+", "2", "+", "||", "==", "||", "==", ">=", "0", "", "+", "1", "-", "0", "<", "+", "1", "0", "0", "0", "<", "0", "loop", "++", "==", "++", "0", "==", "0", "/", "2", "+", "+", "2", "+", "+", "2", "+", "+", "2", "+", "||", "==", "||", "==", ">=", "0", "", "+", "1", "-", "<", "0", "loop", "++", "%d,", "\\n)", "0", "<", "+", "1", "0", "0", "0", "<", "0", "loop", "++", "==", "++", "0", "==", "0", "/", "2", "+", "+", "2", "+", "+", "2", "+", "+", "2", "+", "||", "==", "||", "==", ">=", "0", "", "+", "1", "-", "<", "0", "loop", "++", "%d,", "\\n)", "&", "%d,", "--", "loop", "&", "&", "%d%d,", "0", "+", "2", "0", "+", "/", "2", "*", "+", "1", "<", "0", "loop", "+", "2", "++", "0", "0", "1", "+", "1", "1", "0", "+", "1", "0", "+", "2", "<", "&&", "<=", ">=", "-1\\n)", ">", "0\\n)", "-", "%d\\n,", "0"], "exprDepend": ["0#0;+;", "0#0;+;", "0#0;+;", "0#0;+;", "6;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "3;||;3;==;3;||;3;==;3;>=;0#0;;0;+;1", "3;==;3;++;0#0;;0;+;1", "6;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "0#0;+;", "0#0;+;", "6;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "3;||;3;==;3;||;3;==;3;>=;0#0;;0;+;1", "3;==;3;++;0#0;;0;+;1", "6;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "2;<;0#2;<;0", "1;++;#2;<;0", "3;==;3;++;0#2;<;0", "0#0;+;", "0#0;+;", "6;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "3;||;3;==;3;||;3;==;3;>=;0#0;;0;+;1", "3;==;3;++;0#0;;0;+;1", "6;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "5;+;2#0;;0;+;1", "2;<;0#2;<;0", "1;++;#2;<;0", "3;==;3;++;0#2;<;0", "2;<;0#0;<;0", "1;++;#0;<;0", "3;==;3;++;0#0;<;0", "2;<;0#0;<;0", "1;++;#0;<;0", "%d,#0;<;0", "3;==;3;++;0#0", "6;+;2#0", "5;+;2#0", "5;+;2#0", "%d,#0", "2;+;2#0", "2;<;0#0", "1;++;#0", "3;==;3;++;0#0", "2;<;0#0", "1;++;#0", "%d,#0", "#0", "1;++;#0", "3;==;3;++;0#01", "6;+;2#01", "5;+;2#01", "5;+;2#01", "%d,#01", "2;+;2#01", "3;==;3;++;0#0;+;11", "6;+;2#0;+;11", "5;+;2#0;+;11", "5;+;2#0;+;11", "%d,#0;+;11", "2;+;2#0;+;11", "2;&;2;&;%d%d,#0;+;11", "2;+;2#0;+;11", "1;+;1#0;+;11", "#0;+;11", "#0;+;11", "1;+;2#0;+;11", "2;<;0#1;+;1", "2;==;0#1;+;1", "6;+;2#1;+;1", "5;+;2#1;+;1", "5;+;2#1;+;1", "2;<;0#1;+;1", "0#5;+;2"], "controlContextBC": [":0", ":<", ":+", ":1", "if:0", "if:0", "if:0", "if:<", "if:0", "iflp:++", "iflp:==", "iflp:++", "iflp:0", "if:==", "if:0", "if:/", "if:2", "if:+", "if:+", "if:2", "if:+", "if:+", "if:2", "if:+", "if:+", "if:2", "if:+", ":0", ":<", ":+", ":1", "if:0", "if:0", "if:0", "if:<", "if:0", "iflp:++", "iflp:==", "iflp:++", "iflp:0", "if:==", "if:0", "if:/", "if:2", "if:+", "if:+", "if:2", "if:+", "if:+", "if:2", "if:+", "if:+", "if:2", "if:+", ":||", ":==", ":||", ":==", ":>=", ":0", ":", ":+", ":1", ":-", ":0", ":<", ":+", ":1", "if:0", "if:0", "if:0", "if:<", "if:0", "iflp:++", "iflp:==", "iflp:++", "iflp:0", "if:==", "if:0", "if:/", "if:2", "if:+", "if:+", "if:2", "if:+", "if:+", "if:2", "if:+", "if:+", "if:2", "if:+", ":||", ":==", ":||", ":==", ":>=", ":0", ":", ":+", ":1", ":-", ":<", ":0", "lp:++", "lp:%d,", ":\\n)", ":0", ":<", ":+", ":1", "if:0", "if:0", "if:0", "if:<", "if:0", "iflp:++", "iflp:==", "iflp:++", "iflp:0", "if:==", "if:0", "if:/", "if:2", "if:+", "if:+", "if:2", "if:+", "if:+", "if:2", "if:+", "if:+", "if:2", "if:+", ":||", ":==", ":||", ":==", ":>=", ":0", ":", ":+", ":1", ":-", ":<", ":0", "lp:++", "lp:%d,", ":\\n)", ":&", ":%d,", ":--", "lp:&", "lp:&", "lp:%d%d,", "lp:0", "lp:+", "lp:2", "lp:0", "lp:+", "lp:/", "lp:2", "lp:*", "lp:+", "lp:1", "lp:<", "lp:0", "lp:+", "lp:2", "lplp:++", "lplp:0", "lp:0", "lp:1", "lp:+", "lp:1", "lp:1", "lp:0", "lp:+", "lp:1", "lp:0", "lp:+", "lp:2", "lp:<", "lp:&&", "lp:<=", "lp:>=", "lp:-1\\n)", "lpif:>", "lpif:0\\n)", "lpif:-", "lpif:%d\\n,", ":0"]}]}