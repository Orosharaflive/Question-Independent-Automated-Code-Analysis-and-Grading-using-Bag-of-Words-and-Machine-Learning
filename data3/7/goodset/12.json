{"nodes": [{"string": " N == 0 )", "links": [], "variables": ["N"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return"], "operators": ["=="], "constants": ["0", "0"], "features": []}, {"string": " N == 1 )", "links": [], "variables": ["N"], "ids": [], "nodeId": 1, "featuresSelf": ["icn", "return"], "operators": ["=="], "constants": ["1", "2"], "features": []}, {"string": " N % 2 == 0 )", "links": [3, 4], "variables": [], "ids": [], "nodeId": 2, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " ( N + 1 ) + find ( N / 2 ) + find ( N / 2 - 1 ) ;", "links": [5, 8], "variables": ["N"], "ids": [], "nodeId": 4, "featuresSelf": ["return"], "operators": ["%", "+"], "constants": ["2"], "features": []}, {"string": " N / 2 - 1 )", "links": [6, 7], "variables": [], "ids": ["if"], "nodeId": 5, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["if"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " N / 2 -", "links": [], "variables": ["N", "find"], "ids": ["if"], "nodeId": 7, "featuresSelf": [], "operators": ["/"], "constants": ["2"], "features": []}, {"string": " ( N + 1 ) + find ( N / 2 ) +", "links": [9, 10], "variables": [], "ids": ["if"], "nodeId": 8, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " N / 2 )", "links": [], "variables": ["N", "find"], "ids": ["if"], "nodeId": 9, "featuresSelf": [], "operators": ["/"], "constants": ["2"], "features": []}, {"string": " N + 1 )", "links": [], "variables": ["N"], "ids": ["if"], "nodeId": 10, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " N % 2 != 0 )", "links": [12, 13], "variables": [], "ids": [], "nodeId": 11, "featuresSelf": ["icn"], "operators": ["!="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " ( N + 1 ) + 2 * find ( N / 2 ) ;", "links": [14, 17], "variables": ["N"], "ids": [], "nodeId": 13, "featuresSelf": ["return"], "operators": ["%", "+"], "constants": ["2"], "features": []}, {"string": " 2 * find ( N / 2 ) ;", "links": [15, 16], "variables": [], "ids": ["if"], "nodeId": 14, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " N / 2 )", "links": [], "variables": ["N", "find"], "ids": ["if"], "nodeId": 15, "featuresSelf": [], "operators": ["/"], "constants": ["2"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["if"], "nodeId": 16, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " N + 1 )", "links": [], "variables": ["N"], "ids": ["if"], "nodeId": 17, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": "T;", "links": [], "variables": [], "ids": [], "nodeId": 18, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["T"], "ids": [], "nodeId": 19, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( T -- )", "links": [], "variables": ["T"], "ids": [], "nodeId": 20, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "N;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 21, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["N", "M"], "ids": ["lp"], "nodeId": 22, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d,"], "features": []}, {"string": " ( N + 1 ) * ( N + 2 ) / 2 - 1 ;", "links": [24, 25], "variables": ["max"], "ids": ["lp"], "nodeId": 23, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 24, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " ( N + 1 ) * ( N + 2 ) / 2 -", "links": [26, 27], "variables": [], "ids": ["lp"], "nodeId": 25, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 26, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " ( N + 1 ) * ( N + 2 ) /", "links": [28, 29], "variables": [], "ids": ["lp"], "nodeId": 27, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " N + 2 )", "links": [], "variables": ["N"], "ids": ["lp"], "nodeId": 28, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " N + 1 )", "links": [], "variables": ["N"], "ids": ["lp"], "nodeId": 29, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " M - max )", "links": [], "variables": ["max", "M"], "ids": ["lp"], "nodeId": 30, "featuresSelf": ["icn", "out"], "operators": [">", "-"], "constants": ["%d\\n,"], "features": []}, {"string": "min;", "links": [], "variables": ["min", "N", "find"], "ids": ["lp"], "nodeId": 31, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " min > M )", "links": [], "variables": ["M", "min"], "ids": ["lp"], "nodeId": 32, "featuresSelf": ["icn", "out", "out"], "operators": [">"], "constants": ["-1\\n)", "0\\n)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 33, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":1;==;00", ":1;==;12", ":0;==;", ":0", ":1;%;1;+;2", "if:0;-;", "if:1", "if:2;/;2", "if:0;+;", "if:2;/;2", "if:1;+;1", ":0;!=;", ":0", ":1;%;1;+;2", "if:0;*;", "if:2;/;2", "if:2", "if:1;+;1", ":1;==;00", ":1;==;12", ":0;==;", ":0", ":1;%;1;+;2", "if:0;-;", "if:1", "if:2;/;2", "if:0;+;", "if:2;/;2", "if:1;+;1", ":0;!=;", ":0", ":1;%;1;+;2", "if:0;*;", "if:2;/;2", "if:2", "if:1;+;1", ":", ":1;&;%d,", ":1;--;", "lp:", "lp:2;&;2;&;%d%d,", "lp:1;-;", "lp:1", "lp:0;/;", "lp:2", "lp:0;*;", "lp:1;+;2", "lp:1;+;1", "lp:2;>;2;-;%d\\n,", "lp:", "lp:2;>;-1\\n)0\\n)", ":0"], "expr": ["1;==;00", "1;==;12", "0;==;", "0", "1;%;1;+;2", "0;-;", "1", "2;/;2", "0;+;", "2;/;2", "1;+;1", "0;!=;", "0", "1;%;1;+;2", "0;*;", "2;/;2", "2", "1;+;1", "1;==;00", "1;==;12", "0;==;", "0", "1;%;1;+;2", "0;-;", "1", "2;/;2", "0;+;", "2;/;2", "1;+;1", "0;!=;", "0", "1;%;1;+;2", "0;*;", "2;/;2", "2", "1;+;1", "", "1;&;%d,", "1;--;", "", "2;&;2;&;%d%d,", "1;-;", "1", "0;/;", "2", "0;*;", "1;+;2", "1;+;1", "2;>;2;-;%d\\n,", "", "2;>;-1\\n)0\\n)", "0"], "basic": ["==", "0", "0", "==", "1", "2", "==", "0", "%", "+", "2", "-", "1", "/", "2", "+", "/", "2", "+", "1", "!=", "0", "%", "+", "2", "*", "/", "2", "2", "+", "1", "==", "0", "0", "==", "1", "2", "==", "0", "%", "+", "2", "-", "1", "/", "2", "+", "/", "2", "+", "1", "!=", "0", "%", "+", "2", "*", "/", "2", "2", "+", "1", "&", "%d,", "--", "loop", "&", "&", "%d%d,", "-", "1", "/", "2", "*", "+", "2", "+", "1", ">", "-", "%d\\n,", ">", "-1\\n)", "0\\n)", "0"], "exprDepend": [], "controlContextBC": [":==", ":0", ":0", ":==", ":1", ":2", ":==", ":0", ":%", ":+", ":2", "if:-", "if:1", "if:/", "if:2", "if:+", "if:/", "if:2", "if:+", "if:1", ":!=", ":0", ":%", ":+", ":2", "if:*", "if:/", "if:2", "if:2", "if:+", "if:1", ":==", ":0", ":0", ":==", ":1", ":2", ":==", ":0", ":%", ":+", ":2", "if:-", "if:1", "if:/", "if:2", "if:+", "if:/", "if:2", "if:+", "if:1", ":!=", ":0", ":%", ":+", ":2", "if:*", "if:/", "if:2", "if:2", "if:+", "if:1", ":&", ":%d,", ":--", "lp:&", "lp:&", "lp:%d%d,", "lp:-", "lp:1", "lp:/", "lp:2", "lp:*", "lp:+", "lp:2", "lp:+", "lp:1", "lp:>", "lp:-", "lp:%d\\n,", "lp:>", "lp:-1\\n)", "lp:0\\n)", ":0"]}]}