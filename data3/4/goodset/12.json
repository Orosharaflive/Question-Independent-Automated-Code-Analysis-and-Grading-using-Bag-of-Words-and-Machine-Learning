{"nodes": [{"string": " r > n - r )", "links": [1, 2], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [">"], "constants": [], "features": []}, {"string": " n - r )", "links": [], "variables": ["r", "n"], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " n - r :", "links": [], "variables": ["r", "n"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": "result;", "links": [], "variables": ["result"], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " i <= r ;", "links": [], "variables": ["i", "r"], "ids": [], "nodeId": 4, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 5, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " result *= n -- ;", "links": [], "variables": ["n", "result"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["*=", "--"], "constants": [], "features": []}, {"string": " result /= i ;", "links": [], "variables": ["i", "result"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": ["/="], "constants": [], "features": []}, {"string": " return result ;", "links": [], "variables": ["result"], "ids": [], "nodeId": 9, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 11, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " i < t ;", "links": [], "variables": ["i", "t"], "ids": [], "nodeId": 12, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 13, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 15, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "scanf", "links": [], "variables": ["k"], "ids": ["lp"], "nodeId": 16, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " k - 1 )", "links": [], "variables": ["n", "k", "findCombinations"], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["out"], "operators": ["-", "-"], "constants": ["%llu\\n,", "1", "1"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 18, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":0;>;", ":2;-;", ":2;-;", ":1", ":2;<=;1", ":", "lp:1;++;", "lp:2;*=;2;--;", "lp:2;/=;", ":", ":0;>;", ":2;-;", ":2;-;", ":1", ":2;<=;1", ":", "lp:1;++;", "lp:2;*=;2;--;", "lp:2;/=;", ":", ":", ":1;&;%d,", ":2;<;0", ":", "lp:1;++;", "lp:1;&;%d,", "lp:1;&;%d,", "lp:3;-;3;-;%llu\\n,11", ":0"], "expr": ["0;>;", "2;-;", "2;-;", "1", "2;<=;1", "", "1;++;", "2;*=;2;--;", "2;/=;", "", "0;>;", "2;-;", "2;-;", "1", "2;<=;1", "", "1;++;", "2;*=;2;--;", "2;/=;", "", "", "1;&;%d,", "2;<;0", "", "1;++;", "1;&;%d,", "1;&;%d,", "3;-;3;-;%llu\\n,11", "0"], "basic": [">", "-", "-", "1", "<=", "1", "loop", "++", "*=", "--", "/=", ">", "-", "-", "1", "<=", "1", "loop", "++", "*=", "--", "/=", "&", "%d,", "<", "0", "loop", "++", "&", "%d,", "&", "%d,", "-", "-", "%llu\\n,", "1", "1", "0"], "exprDepend": [], "controlContextBC": [":>", ":-", ":-", ":1", ":<=", ":1", "lp:++", "lp:*=", "lp:--", "lp:/=", ":>", ":-", ":-", ":1", ":<=", ":1", "lp:++", "lp:*=", "lp:--", "lp:/=", ":&", ":%d,", ":<", ":0", "lp:++", "lp:&", "lp:%d,", "lp:&", "lp:%d,", "lp:-", "lp:-", "lp:%llu\\n,", "lp:1", "lp:1", ":0"]}]}