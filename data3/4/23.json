{"nodes": [{"string": "long;", "links": [], "variables": ["long"], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%lld,"], "features": []}, {"string": " i < t ;", "links": [], "variables": ["t", "i"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 3, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "k"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%lld\\t%lld,"], "features": []}, {"string": " n == k ||", "links": [], "variables": ["k", "n"], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["icn"], "operators": ["||", "==", "=="], "constants": ["1"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 7, "featuresSelf": ["out"], "operators": [], "constants": ["1\\n)"], "features": []}, {"string": " continue ;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 8, "featuresSelf": ["continue"], "operators": [], "constants": [], "features": []}, {"string": " n -- ;", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " k -- ;", "links": [], "variables": ["k"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " k >= n / 2 )", "links": [12, 13], "variables": [], "ids": ["lp"], "nodeId": 11, "featuresSelf": ["icn"], "operators": [">="], "constants": [], "features": []}, {"string": " n / 2 )", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": ["/"], "constants": ["2"], "features": []}, {"string": null, "links": [], "variables": ["k"], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " n - k ;", "links": [], "variables": ["k", "n"], "ids": ["lp", "if"], "nodeId": 14, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " i <= k ;", "links": [], "variables": ["k", "i"], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": [",", "<="], "constants": ["1", "1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 16, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": " n -- , i ++ )", "links": [], "variables": ["i", "n"], "ids": ["lp", "lp"], "nodeId": 17, "featuresSelf": [], "operators": [",", "++", "--"], "constants": [], "features": []}, {"string": " ( f * n ) / i ;", "links": [19, 20], "variables": [], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 19, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " f * n )", "links": [], "variables": ["n", "f"], "ids": ["lp", "lp"], "nodeId": 20, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["f"], "ids": ["lp"], "nodeId": 21, "featuresSelf": ["out"], "operators": [], "constants": ["%lld\\n,"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 22, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%lld,", ":2;<;0", ":", "lp:1;++;", "lp:2;&;2;&;%lld\\t%lld,", "lp:2;||;2;==;2;==;1", "lpif:1\\n)", "lpif:", "lp:1;--;", "lp:1;--;", "lp:0;>=;", "lp:1;/;2", "lp:", "lpif:2;-;", "lp:2;,;2;<=;11", "lp:", "lplp:2;,;2;++;2;--;", "lplp:0;/;", "lplp:", "lplp:2;*;", "lp:%lld\\n,", ":0"], "expr": ["", "1;&;%lld,", "2;<;0", "", "1;++;", "2;&;2;&;%lld\\t%lld,", "2;||;2;==;2;==;1", "1\\n)", "", "1;--;", "1;--;", "0;>=;", "1;/;2", "", "2;-;", "2;,;2;<=;11", "", "2;,;2;++;2;--;", "0;/;", "", "2;*;", "%lld\\n,", "0"], "basic": ["&", "%lld,", "<", "0", "loop", "++", "&", "&", "%lld\\t%lld,", "||", "==", "==", "1", "1\\n)", "--", "--", ">=", "/", "2", "-", ",", "<=", "1", "1", "loop", ",", "++", "--", "/", "*", "%lld\\n,", "0"], "exprDepend": ["2;&;2;&;%lld\\t%lld,#2;-;", "2;||;2;==;2;==;1#2;-;", "1;--;#2;-;", "#2;-;", "2;<;0#2;,;2;<=;11", "1;++;#2;,;2;<=;11"], "controlContextBC": [":&", ":%lld,", ":<", ":0", "lp:++", "lp:&", "lp:&", "lp:%lld\\t%lld,", "lp:||", "lp:==", "lp:==", "lp:1", "lpif:1\\n)", "lp:--", "lp:--", "lp:>=", "lp:/", "lp:2", "lpif:-", "lp:,", "lp:<=", "lp:1", "lp:1", "lplp:,", "lplp:++", "lplp:--", "lplp:/", "lplp:*", "lp:%lld\\n,", ":0"]}]}