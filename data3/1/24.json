{"nodes": [{"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 0, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 1, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 2, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": "t;", "links": [], "variables": ["["], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": ["26"], "features": []}, {"string": "char s[315];", "links": [], "variables": ["s"], "ids": [], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": ["315"], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "getchar", "links": [], "variables": ["getchar"], "ids": [], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 7, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": " x = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "memset", "links": [], "variables": ["a", "memset"], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "fgets", "links": [], "variables": ["s", "stdin", "fgets"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " n = strlen ( s ) ;", "links": [], "variables": ["s", "strlen"], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < n ;", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 13, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " s [ i ] - 'a' ]", "links": [], "variables": ["s", "i"], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": ["icn"], "operators": ["&&", "<=", ">=", "-"], "constants": ["'z'", "'a'", "'a'", "1"], "features": []}, {"string": " s [ i ] - 'A' ]", "links": [], "variables": ["s", "i"], "ids": ["lp", "lp"], "nodeId": 16, "featuresSelf": ["icn"], "operators": ["&&", "<=", ">=", "-"], "constants": ["'Z'", "'A'", "'A'", "1"], "features": []}, {"string": " i <= 'z' ;", "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 17, "featuresSelf": [], "operators": ["<="], "constants": ["'a'", "'z'"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 18, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 19, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ i - 'a' ] == 0 )", "links": [21, 22], "variables": [], "ids": ["lp", "lp"], "nodeId": 20, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 21, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i - 'a' ]", "links": [], "variables": ["a", "i"], "ids": ["lp", "lp"], "nodeId": 22, "featuresSelf": [], "operators": ["-"], "constants": ["'a'"], "features": []}, {"string": "printf", "links": [], "variables": ["i"], "ids": ["lp", "lp", "if"], "nodeId": 23, "featuresSelf": ["out"], "operators": [], "constants": ["%c\\n,"], "features": []}, {"string": " x = 1 ;", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 24, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 25, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " x == 0 )", "links": [], "variables": ["x"], "ids": ["lp"], "nodeId": 26, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["0"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 27, "featuresSelf": ["out"], "operators": [], "constants": ["~\\n)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 28, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":", ":", ":", ":", ":", ":", ":", ":", ":26", ":315", ":1;&;%d,", ":", ":1;--;", "lp:0", "lp:0", "lp:", "lp:", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&&;2;<=;2;>=;2;-;'z''a''a'1", "lplp:2;&&;2;<=;2;>=;2;-;'Z''A''A'1", "lp:1;<=;'a''z'", "lp:", "lplp:1;++;", "lplp:0;==;", "lplp:0", "lplp:2;-;'a'", "lplpif:%c\\n,", "lplpif:1", "lplpif:", "lp:1;==;0", "lpif:~\\n)", ":0"], "expr": ["", "", "", "", "", "", "", "", "", "26", "315", "1;&;%d,", "", "1;--;", "0", "0", "", "", "2;<;0", "", "1;++;", "2;&&;2;<=;2;>=;2;-;'z''a''a'1", "2;&&;2;<=;2;>=;2;-;'Z''A''A'1", "1;<=;'a''z'", "", "1;++;", "0;==;", "0", "2;-;'a'", "%c\\n,", "1", "", "1;==;0", "~\\n)", "0"], "basic": ["26", "315", "&", "%d,", "--", "loop", "0", "0", "<", "0", "loop", "++", "&&", "<=", ">=", "-", "'z'", "'a'", "'a'", "1", "&&", "<=", ">=", "-", "'Z'", "'A'", "'A'", "1", "<=", "'a'", "'z'", "loop", "++", "==", "0", "-", "'a'", "%c\\n,", "1", "==", "0", "~\\n)", "0"], "exprDepend": ["0#2;&&;2;<=;2;>=;2;-;'z''a''a'1", "315#2;&&;2;<=;2;>=;2;-;'z''a''a'1", "#2;&&;2;<=;2;>=;2;-;'z''a''a'1", "#2;&&;2;<=;2;>=;2;-;'z''a''a'1", "2;<;0#2;&&;2;<=;2;>=;2;-;'z''a''a'1", "1;++;#2;&&;2;<=;2;>=;2;-;'z''a''a'1", "0#2;&&;2;<=;2;>=;2;-;'Z''A''A'1", "315#2;&&;2;<=;2;>=;2;-;'Z''A''A'1", "#2;&&;2;<=;2;>=;2;-;'Z''A''A'1", "#2;&&;2;<=;2;>=;2;-;'Z''A''A'1", "2;&&;2;<=;2;>=;2;-;'z''a''a'1#2;&&;2;<=;2;>=;2;-;'Z''A''A'1", "2;<;0#2;&&;2;<=;2;>=;2;-;'Z''A''A'1", "1;++;#2;&&;2;<=;2;>=;2;-;'Z''A''A'1", "2;&&;2;<=;2;>=;2;-;'z''a''a'1#2;&&;2;<=;2;>=;2;-;'Z''A''A'1", "2;<;0#1;<=;'a''z'", "1;++;#1;<=;'a''z'", "2;&&;2;<=;2;>=;2;-;'z''a''a'1#1;<=;'a''z'", "2;&&;2;<=;2;>=;2;-;'Z''A''A'1#1;<=;'a''z'"], "controlContextBC": [":26", ":315", ":&", ":%d,", ":--", "lp:0", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:&&", "lplp:<=", "lplp:>=", "lplp:-", "lplp:'z'", "lplp:'a'", "lplp:'a'", "lplp:1", "lplp:&&", "lplp:<=", "lplp:>=", "lplp:-", "lplp:'Z'", "lplp:'A'", "lplp:'A'", "lplp:1", "lp:<=", "lp:'a'", "lp:'z'", "lplp:++", "lplp:==", "lplp:0", "lplp:-", "lplp:'a'", "lplpif:%c\\n,", "lplpif:1", "lp:==", "lp:0", "lpif:~\\n)", ":0"]}]}