{"nodes": [{"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 0, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 1, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 2, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": "i;", "links": [], "variables": [], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < l ;", "links": [], "variables": ["l", "i"], "ids": [], "nodeId": 4, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 5, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": " str [ i ] = tolower ( str [ i ] ) ;", "links": [], "variables": ["i", "str", "tolower"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 8, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "y;", "links": [], "variables": [], "ids": [], "nodeId": 9, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["y"], "ids": [], "nodeId": 10, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%c,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 11, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "char str[500];", "links": [], "variables": ["str"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": ["500"], "features": []}, {"string": "x;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["x"], "ids": ["lp"], "nodeId": 14, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "fgets", "links": [], "variables": ["str", "stdin", "fgets"], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": [], "constants": ["500"], "features": []}, {"string": "l;", "links": [], "variables": ["l", "str", "strlen"], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "low_case", "links": [], "variables": ["str", "l", "low_case"], "ids": ["lp"], "nodeId": 17, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "char s[]=;", "links": [], "variables": ["s"], "ids": ["lp"], "nodeId": 18, "featuresSelf": [], "operators": [], "constants": ["abcdefghijklmnopqrstuvwxyz"], "features": []}, {"string": "i;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 19, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < 26 ;", "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 20, "featuresSelf": [], "operators": ["<"], "constants": ["0", "26"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 21, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 22, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " x = s [ i ] ;", "links": [], "variables": ["s", "i"], "ids": ["lp", "lp"], "nodeId": 23, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "j;", "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 24, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " j < l ;", "links": [], "variables": ["l", "j"], "ids": ["lp", "lp"], "nodeId": 25, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 26, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp", "lp"], "nodeId": 27, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " str [ j ] == x )", "links": [], "variables": ["x", "str", "j"], "ids": ["lp", "lp", "lp"], "nodeId": 28, "featuresSelf": ["icn", "break"], "operators": ["=="], "constants": [], "features": []}, {"string": " j == l )", "links": [], "variables": ["l", "j"], "ids": ["lp", "lp"], "nodeId": 29, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["x"], "ids": ["lp", "lp", "if"], "nodeId": 30, "featuresSelf": ["out"], "operators": [], "constants": ["%c\\n,"], "features": []}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 31, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " i == 26 )", "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 32, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["26"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 33, "featuresSelf": ["out"], "operators": [], "constants": ["~\\n)"], "features": []}], "features": [{"controlContextEC": [":", ":", ":", ":", ":", ":", ":", ":", ":", ":", ":2;<;0", ":", "lp:3;++;", ":", ":", ":", ":", ":2;<;0", ":", "lp:3;++;", ":", ":1;&;%d,", ":", ":1;&;%c,", ":1;--;", "lp:500", "lp:", "lp:1;&;%d,", "lp:500", "lp:", "lp:", "lp:abcdefghijklmnopqrstuvwxyz", "lp:", "lp:1;<;026", "lp:", "lplp:1;++;", "lplp:", "lplp:", "lplp:2;<;0", "lplp:", "lplplp:1;++;", "lplplp:3;==;", "lplp:2;==;", "lplpif:%c\\n,", "lplpif:", "lp:1;==;26", "lpif:~\\n)"], "expr": ["", "", "", "", "", "", "", "", "", "", "2;<;0", "", "3;++;", "", "", "", "", "2;<;0", "", "3;++;", "", "1;&;%d,", "", "1;&;%c,", "1;--;", "500", "", "1;&;%d,", "500", "", "", "abcdefghijklmnopqrstuvwxyz", "", "1;<;026", "", "1;++;", "", "", "2;<;0", "", "1;++;", "3;==;", "2;==;", "%c\\n,", "", "1;==;26", "~\\n)"], "basic": ["<", "0", "loop", "++", "<", "0", "loop", "++", "&", "%d,", "&", "%c,", "--", "loop", "500", "&", "%d,", "500", "abcdefghijklmnopqrstuvwxyz", "<", "0", "26", "loop", "++", "<", "0", "loop", "++", "==", "==", "%c\\n,", "==", "26", "~\\n)"], "exprDepend": ["2;<;0#3;++;", "2;<;0#3;++;", "2;<;0#1;<;026", "3;++;#1;<;026", "1;&;%d,#"], "controlContextBC": [":<", ":0", "lp:++", ":<", ":0", "lp:++", ":&", ":%d,", ":&", ":%c,", ":--", "lp:500", "lp:&", "lp:%d,", "lp:500", "lp:abcdefghijklmnopqrstuvwxyz", "lp:<", "lp:0", "lp:26", "lplp:++", "lplp:<", "lplp:0", "lplplp:++", "lplplp:==", "lplp:==", "lplpif:%c\\n,", "lp:==", "lp:26", "lpif:~\\n)"]}]}